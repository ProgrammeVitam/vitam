#%RAML 1.0 Library

usage: |
  Use to define global headers
uses:
  StandardTypes: StandardTypes.raml

traits:

  AllowsHeader:
    headers:
      Accept:
        description: |
          Allow to specify if a result must contain only Metadata ('_application/json_') or only the _Objects_ with a binary content ('_application/octet-stream_').
        type: string
        enum: [ "application/json", "application/zip", "application/octet-stream" ]

  AccessContractHeader:
    headers:
      X-Access-Contract-Id:
        type: string
        required: true
        description: Unique Access Contract Identifier. Allow read/write access on specific archive unit.
        example: Access-Contract-00001

  StandardOptionalHeader:
    headers: &optionalheader
      X-Application-Id:
        type: string
        required: false
        description: |
            Session Identifier from client Front-Office Application
        example: SESSION-ID-00001
      X-Personal-Certificate:
        type: string
        required: false
        description: |
            Personal certificate (in Base64-encoded DER format), required  only if this resource needs personal authentification.
            If the resource requires personal authentication, and no personal certificate has been provided OR the
            provided personal certificate is unauthorized, the server will return a 401 http status.
        example: MIIGfzCCBGegAwIBAgICAPcwDQYJK...
      X-Tenant-Id:
        type: number
        required: true
        description: Unique Tenant Identifier.
        example: 0
  UploadFileOptionalHeader:
    headers: &optionalheader
      X-Filename:
        type: string
        required: false
        description: |
            Name of the file uploaded
        example: Rules_v5.csv

  StandardHeader200:
    responses:
      200:
        description: OK, operation in success
        headers: &standardheader
          X-Request-Id:
            type: string
            required: true
            description: Unique Request Identifier
            example: aeeaaaaaachmj6ciaa5nwalv3rsu4laaaaaq
  StandardHeader201:
    responses:
      201:
        description: Created, creation operation in success
        headers: *standardheader
  StandardHeader202:
    responses:
      202:
        description: Accepted, Asynchronous operation accepted
        headers: *standardheader
  StandardHeader204:
    responses:
      204:
        description: No Content, Used to test existence or for Status
        headers: *standardheader
  StandardHeader206:
    responses:
      206:
        description: Partial Content, pagination involved
        headers: *standardheader
  StandardHeader400:
    responses:
      400:
        description: Bad Request, syntax might be erroneous
        headers: *standardheader
  StandardHeader401:
    responses:
      401:
        description: Unauthorized (restricted operation), authentication in error
        headers: *standardheader
  StandardHeader403:
    responses:
      403:
        description: Forbidden, requested action is forbidden
        headers: *standardheader
  StandardHeader404:
    responses:
      404:
        description: Not Found, requested resource does not exist
        headers: *standardheader
  StandardHeader405:
    responses:
      405:
        description: Method Not Allowed, requested resource is not allowed
        headers: *standardheader
  StandardHeader409:
    responses:
      409:
        description: Conflict, operation requested is in conflict with existing data
        headers: *standardheader
  StandardHeader412:
    responses:
      412:
        description: Precondition Failed, some predicates are incorrect, therefore the operation is not possible
        headers: *standardheader
  StandardHeader415:
    responses:
      415:
        description: Unsupported Media Type, the Content-Type in the request is not supported
        headers: *standardheader
  StandardHeader417:
    responses:
      417:
        description: Expectation Failed, used in Validation when the required validation (X-Valid) is in error
        headers: *standardheader
  StandardHeader500:
    responses:
      500:
        description: Internal Server Error, the server encountered an unexpected condition which prevented it from fulfilling the request
  StandardHeader503:
    responses:
      503:
        description: Service Unavailable, the requested service is unavailable

  OverrideGet:
    description: For HTTP clients that do not support GET Request with a body
    headers:
      X-Http-Method-Override?:
        type: string
        enum:
          - GET
  OverridePut:
    description: For HTTP clients that do not support PUT Request with a body
    headers:
      X-Http-Method-Override?:
        type: string
        enum:
          - PUT
  OverrideHead:
    description: For HTTP clients that do not support HEAD Request
    headers:
      X-Http-Method-Override?:
        type: string
        enum:
          - HEAD
  OverrideOptions:
    description: For HTTP clients that do not support OPTIONS Request
    headers:
      X-Http-Method-Override?:
        type: string
        enum:
          - OPTIONS
  OverrideDelete:
    description: For HTTP clients that do not support DELETE Request with a body
    headers:
      X-Http-Method-Override?:
        type: string
        enum:
          - DELETE

  StandardError404:
    responses:
      404:
        description: Internal Server Error, the server encountered an error
        body:
          application/json:
            type: StandardTypes.Error
            example: !include examples/error-404.json

  StandardError412:
    responses:
      412:
        description: Precondition Failed, some predicates are incorrect, therefore the operation is not possible
        body:
          application/json:
            type: StandardTypes.Error
            example: !include examples/error-412.json

  StandardError500:
    responses:
      500:
        description: Internal Server Error, the server encountered an error
        body:
          application/json:
            type: StandardTypes.Error
            example: !include examples/error-500.json

  StandardErrors:
    is: [StandardError404, StandardError412, StandardError500]