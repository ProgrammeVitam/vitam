#%RAML 1.0 Library

usage: |
  Use to define global headers for Access
uses:
  StandardTypes: StandardTypes.raml
  StandardTraits: StandardTraits.raml
  AccessTypes: AccessTypes.raml

traits:

  AccessUnitResponse:
    description: Response model for Units collection in access
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.AllowsHeader,
      StandardTraits.StandardHeader200, StandardTraits.StandardHeader400,
      StandardTraits.StandardHeader401, StandardTraits.StandardHeader405, StandardTraits.StandardHeader500 ]
    body:
      application/json:
        description: Contient la requête DSL multiple au format JSON.
        type: AccessTypes.AccessMultipleQueryWithPrecisionForUnit
        example: !include examples/accessUnitRequestWithFacet.json
    responses:
      200:
        description: Renvoie la liste des résultats d'Unités d'archives correspondant à la requête DSL
        body:
          application/json:
            description: Réponse DSL multiple pour Access contenant les métadonnées des Unités d'archives
            type: AccessTypes.AccessMultipleResponse
            examples:
              -default-response: !include examples/accessUnitResponse.json
              -facet-response: !include examples/accessUnitResponseWithFacet.json

  AccessUnitStreamResponse:
    description: Response model for Units collection in access
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.AllowsHeader,
      StandardTraits.StandardHeader200, StandardTraits.StandardHeader417, StandardTraits.StandardHeader500 ]
    body:
      application/json:
        description: Contient la requête DSL multiple au format JSON. cette fonctionnalité ne supporte pas les facets et les filtres $limit et $offset
        type: AccessTypes.AccessStreamMultipleQuery
        example: !include examples/streamUnitRequest.json
    responses:
      200:
        description: Renvoie la liste des résultats d'Unités d'archives correspondant à la requête DSL
        headers:
          X-Units-Count:
            type: number
            description: nombre des unités archivestiques retournées dans le flux
            example: 141202
          X-Content-Length:
            type: number
            description: la taille du flux de données
            example: 13978998
        body:
          application/octet-stream:
            description: Réponse un Json stream contenant les métadonnées des Unités d'archives
            type: AccessTypes.AccessStreamResponse
            example: !include examples/streamUnitResponse.jsonl

  AccessObjectStreamResponse:
    description: Response model for Objects collection in access
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.AllowsHeader,
      StandardTraits.StandardHeader200, StandardTraits.StandardHeader417, StandardTraits.StandardHeader500 ]
    body:
      application/json:
        description: Contient la requête DSL multiple au format JSON. cette fonctionnalité ne supporte pas les facets et les filtres $limit et $offset
        type: AccessTypes.AccessStreamMultipleQuery
        example: !include examples/streamObjectRequest.json
    responses:
      200:
        description: Renvoie la liste des résultats d'objets correspondant à la requête DSL
        headers:
          X-Objects-Count:
            type: number
            description: nombre des objets retournés dans le flux
            example: 141202
          X-Content-Length:
            type: number
            description: la taille du flux de données
            example: 13978998
        body:
          application/octet-stream:
            description: Réponse un Json stream contenant les métadonnées des objets
            type: AccessTypes.AccessStreamResponse
            example: !include examples/streamObjectResponse.jsonl

  AccessUniqueUnitResponse:
    description: Response model for Unit item in access
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.AllowsHeader,
      StandardTraits.StandardHeader200, StandardTraits.StandardHeader400,
      StandardTraits.StandardHeader401, StandardTraits.StandardHeader403, StandardTraits.StandardHeader404, StandardTraits.StandardHeader412 ]
    body:
      application/json:
        description: Body contient la requête DSL unitaire au format JSON.
        type: AccessTypes.AccessGetByIdQuery
        example: !include examples/access1UnitQuery.json
    responses:
      200:
        description: Renvoie la liste de résultats contenant 1 Unité d'archive correspondant à la requête DSL
        body:
          application/json:
            description: Réponse DSL multiple pour Access contenant les métadonnées de l'Unité d'archive
            type: AccessTypes.AccessGetByIdResponse
            example: !include examples/access1UnitResponse.json


  AccessUnitWithInheritedRulesResponse:
    description: Response model for units with inherited rules in access
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.AllowsHeader,
      StandardTraits.StandardHeader200, StandardTraits.StandardHeader400,
      StandardTraits.StandardHeader401, StandardTraits.StandardHeader403, StandardTraits.StandardHeader404, StandardTraits.StandardHeader412 ]
    body:
      application/json:
        description: Contient la requête DSL multiple au format JSON.
        type: AccessTypes.AccessMultipleQuery
    responses:
      200:
        description: Renvoie la liste des résultats d'Unités d'archives correspondant à la requête DSL ainsi que leurs règles héritées.
        body:
          application/json:
            description: Réponse DSL multiple pour Access contenant les métadonnées des Unités d'archives ainsi que leurs règles héritées.
            type: AccessTypes.AccessMultipleResponse
            example: !include examples/accessUnitWithInheritedRulesResponse.json

  AccessUniqueObjectQualifierResponse:
    description: Response model for Object collection under Units collection in access or direct access to get one specific Qualifier version
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.AllowsHeader,
      StandardTraits.StandardHeader200, StandardTraits.StandardHeader400, StandardTraits.CustomHeader460,
      StandardTraits.StandardHeader401, StandardTraits.StandardHeader403, StandardTraits.StandardHeader404, StandardTraits.StandardHeader412 ]
    headers:
      X-Qualifier?:
        type: string
        enum:
          - BinaryMaster
          - Dissemination
          - Thumbnail
          - TextContent
        description: |
         L'usage est utilisée et obligatoire uniquement en présence de Accept: application/octet-stream.
         **ONLY VALID with Accept application/octet-stream**
      X-Version?:
        type: integer
        description: |
          La version est utilisée et obligatoire uniquement en présence de Accept: application/octet-stream.
          **ONLY VALID with Accept application/octet-stream**
    responses:
      200:
        description: Renvoie l'objet binaire (Returns the list of 1 Object matching the DSL query)
        headers:
          X-Qualifier?:
            type: AccessTypes.X-Qualifiers
            description: |
              L'usage est utilisée et obligatoire uniquement en présence de Accept: application/octet-stream.
              **ONLY VALID with Accept application/octet-stream**
          X-Version?:
            type: integer
            description: |
              La version est utilisée et obligatoire uniquement en présence de Accept: application/octet-stream.
              **ONLY VALID with Accept application/octet-stream**
        body:
          application/octet-stream:
            description: Objet binaire

  AccessGOTResponse:
    description: Réponse sur les groupes d'objets
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.AllowsHeader,
      StandardTraits.StandardHeader200, StandardTraits.StandardHeader400,
      StandardTraits.StandardHeader401, StandardTraits.StandardHeader403, StandardTraits.StandardHeader404, StandardTraits.StandardHeader412 ]
    body:
      application/json:
        description: Contient la requête DSL multiple au format JSON.
        type: AccessTypes.AccessMultipleQueryWithPrecisionForGot
        example: !include examples/accessGotRequest.json
    responses:
      200:
        description: Renvoie la liste de résultats correspondant à la requête DSL
        body:
          application/json:
            description: Résultats json correspondant à la requête DSL
            type: AccessTypes.AccessMultipleResponse
            example: !include examples/accessGotResponse.json

  AccessUniqueObjectResponse:
    description: Response model for Object collection under Units collection in access
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.AllowsHeader,
      StandardTraits.StandardHeader200, StandardTraits.StandardHeader400,
      StandardTraits.StandardHeader401, StandardTraits.StandardHeader403, StandardTraits.StandardHeader404, StandardTraits.StandardHeader412 ]
    body:
      application/json:
        description: |
          Body contient la requête DSL unitaire au format JSON. Il est utilisé et obligatoire uniquement en présence de Accept: application/json.
          **ONLY VALID with Accept application/json**
        type: AccessTypes.AccessGetByIdQuery
        example: !include examples/access1ObjectQuery.json
    responses:
      200:
        description: Renvoie la liste de résultats contenant 1 Object d'archive correspondant à la requête DSL
        body:
          application/json:
            description: Réponse DSL unitaire pour Access contenant les métadonnées
            type: AccessTypes.AccessGetByIdResponse
            example: !include examples/access1ObjectResponse.json
          application/octet-stream:
            description: Objet binaire

  AccessUpdateUnitResponse:
    description: Response model for Update Unit under Units collection in access
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader200, StandardTraits.StandardHeader400,
      StandardTraits.StandardHeader401, StandardTraits.StandardHeader403, StandardTraits.StandardHeader404, StandardTraits.StandardHeader405, StandardTraits.StandardHeader412 ]
    body:
      application/json:
        description: Body contient la requête DSL unitaire de modification au format JSON.
        type: AccessTypes.AccessUpdateByIdQuery
        example: !include examples/access1UnitUpdateQuery.json
    responses:
      200:
        description: Renvoie l'état d'execution de la modification correspondant à la requête DSL
        body:
          application/json:
            description: Réponse DSL unitaire de modification pour Access contenant l'état d'execution de la modification.
            type: AccessTypes.AccessUpdateByIdResponse
            example: !include examples/access1UnitUpdateResponse.json

  AccessUpdateBatchUnitResponse:
    description: Response model for Update Unit under Units collection in access
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader200, StandardTraits.StandardHeader400,
      StandardTraits.StandardHeader401, StandardTraits.StandardHeader403, StandardTraits.StandardHeader404, StandardTraits.StandardHeader405, StandardTraits.StandardHeader412 ]
    body:
      application/json:
        description: Requête permettant de mettre à jour les métadonnées descriptives d'unités d'archives
        type: AccessTypes.UnitBatchUpdateRequest
        examples:
          UnitsBatchUpdate: !include examples/unitsBatchUpdate.json
          BatchUpdateObject: !include examples/updateObjects.json
          BatchRemove: !include examples/batchRemove.json
    responses:
      202:
        description: Renvoie le statut de l'opération de mise à jour
        body:
          application/json:
            description: Operation de mise à jour acceptée
      500:
        description: Renvoie le statut final de l'opération en KO
        body:
          application/json:
            description: informations sur l'echec du lancement de l'opération

  AccessBulkAtomicUpdateResponse:
    description: Response model for Bulk Atomic Update under Units collection in access
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader200, StandardTraits.StandardHeader400,
      StandardTraits.StandardHeader401, StandardTraits.StandardHeader403, StandardTraits.StandardHeader404, StandardTraits.StandardHeader405, StandardTraits.StandardHeader412 ]
    body:
      application/json:
        description: Requête permettant de mettre à jour unitairement les métadonnées descriptives de plusieurs unités d'archives
        type: AccessTypes.BulkAtomicUpdateRequest
        examples:
          BulkAtomicUpdate: !include examples/bulkAtomicUpdate.json
    responses:
      200:
        description: Renvoie le statut de l'opération de mise à jour
        body:
          application/json:
            description: Operation de mise à jour acceptée
      500:
        description: Renvoie le statut final de l'opération en KO
        body:
          application/json:
            description: Informations sur l'échec du lancement de l'opération

  DipCreationResponseAsync:
    description: Requête de création d'un DIP
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader202 ]
    body:
      application/json:
        description: Body contient la requête DSL **multiple** au format JSON.
        type: AccessTypes.AccessMultipleQuery
    responses:
      202:
        description: |
          Renvoie le statut de l'opération de DIP
        body:
          application/json:
            description: Operation de DIP acceptée
            type: StandardTypes.AsyncStatus
      500:
        description: Renvoie ce statut en cas d'erreur interne
        body:
          application/json:
            description: Internal server error

  DipV2Async:
    description: Requête de création d'un DIP v2
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader202 ]
    body:
      application/json:
        description: Body contient la requête DSL **multiple** au format JSON.
        type: AccessTypes.DipRequest
    responses:
      202:
        description: |
          Renvoie le statut de l'opération de DIP V2
        body:
          application/json:
            description: Operation de DIP V2 acceptée
            type: StandardTypes.AsyncStatus
      500:
        description: Renvoie ce statut en cas d'erreur interne
        body:
          application/json:
            description: Internal server error

  TransferCreationResponseAsync:
    description: Requête de création d'un transfer SIP
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader202 ]
    body:
      application/json:
        description: Body contient la requête ayant un DSL **multiple** et d'autres paramètres au format JSON.
        type: AccessTypes.TransferRequest
    responses:
      202:
        description: |
          Renvoie le statut de l'opération de Transfer
        body:
          application/json:
            description: Operation de Transfer acceptée
            type: StandardTypes.AsyncStatus
      500:
        description: Renvoie ce statut en cas d'erreur interne
        body:
          application/json:
            description: Internal server error

  EliminationResponseAsync:
    description: Requête d'élimination
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader202 ]
    body:
      application/json:
        description: Body contient la requête DSL **multiple** au format JSON ainsi que la date d'élimination.
        type: AccessTypes.EliminationRequest
        example: !include examples/eliminationRequest.json
    responses:
      202:
        description: |
          Renvoie le statut de l'opération de l'élimination
        body:
          application/json:
            description: Operation d'élimination acceptée
            type: AccessTypes.EliminationResponse
            example: !include examples/eliminationResponse.json
      500:
        description: Renvoie le statut final de l'opération d'élimination en KO
        body:
          application/json:
            description: Rapport final de l'opération d'élimination

  PreservationResponseAsync:
    description: Requête de préservation
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader202 ]
    body:
      application/json:
        description: |
          Body contient la requête DSL au format JSON.
          l'Identifiant du scénario de préservation.
          l'usage source source du binaire à traité,
          La version du binaire source (FIRST ou LAST) et
          l'usage cible du binaire à générer
        type: AccessTypes.PreservationRequest
        example: !include examples/preservationRequest.json
    responses:
      202:
        description: |
          Renvoie le statut de l'opération de préservation
        body:
          application/json:
            description: Operation de préservation acceptée
            type: AccessTypes.PreservationResponse
            example: !include examples/preservationResponse.json
      500:
        description: Renvoie le statut final de l'opération de préservation en KO
        body:
          application/json:
            description: Rapport final de l'opération de préservation

  UnitBatchUpdateRequest:
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader ]
    body:
      application/json:
        description: Requête de mise à jour de masse des métadonnées de gestion des unitiés archivistiques
        type: AccessTypes.UnitBatchUpdateRequest
        examples:
          RulesUpdate: !include examples/rulesUpdate.json

  UnitBatchUpdateResponseAsync:
      is: [ StandardTraits.StandardHeader202, StandardTraits.StandardHeader500,
        StandardTraits.StandardError500 ]
      responses:
        202:
          description: |
            Renvoie le statut de l'opération de mise à jour
          body:
            application/json:
              description: Operation de mise à jour acceptée
              type: StandardTypes.AsyncStatus
        500:
          description: Renvoie le statut final de l'opération en KO
          body:
            application/json:
              description: informations sur l'echec du lancement de l'opération

  UnitComputedInheritedRulesDeleteResponse:
          description: Requête de suppression de masse des métadonnées de gestion calculées des unitiés archivistiques
          is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader202 ]
          body:
            application/json:
              example: !include examples/launchComputeInheritedRulesAfterIngest.json
          responses:
            202:
              description: |
                Renvoie le statut de l'opération de mise à jour
              body:
                application/json:
                  description: Operation de mise à jour acceptée
            500:
              description: Renvoie le statut final de l'opération en KO
              body:
                application/json:
                  description: informations sur l'echec du lancement de l'opération

  UnitComputedInheritedRulesResponse:
        description: Requête de mise à jour de masse des métadonnées de gestion calculées des unitiés archivistiques
        is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader202 ]
        body:
          application/json:
            example: !include examples/launchComputeInheritedRulesAfterIngest.json
        responses:
          202:
            description: |
              Renvoie le statut de l'opération de mise à jour
            body:
              application/json:
                description: Operation de mise à jour acceptée
          500:
            description: Renvoie le statut final de l'opération en KO
            body:
              application/json:
                description: informations sur l'echec du lancement de l'opération

  TransferReplyResponseAsync:
    description: Requête de transfert reply
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader202 ]
    body:
      application/json:
        description: Body contient la requête ayant un DSL **multiple** et d'autres paramètres au format JSON.
        type: AccessTypes.TransferRequest
    responses:
      202:
        description: |
          Renvoie le statut de l'opération de Transfer
        body:
          application/json:
            description: Operation de Transfer acceptée
            type: StandardTypes.AsyncStatus
      500:
        description: Renvoie ce statut en cas d'erreur interne
        body:
          application/json:
            description: Internal server error

  RevertUnitResponse:
    description: Requête de transfert reply
    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader202 ]
    responses:
      202:
        description: |
          Renvoie le statut de l'opération de la restauration des métadoonées
        body:
          application/json:
            description: Operation de Transfer acceptée
            type: StandardTypes.AsyncStatus

  DeleteGotVersionsResponseAsync:
      description: Requête de suppression des versions des groupes d'objets
      is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader202 ]
      body:
        application/json:
          description: |
            Body contient la requête DSL au format JSON.
            Le nom d'usage du groupe d'objets et
            la liste des versions à supprimer.
          type: AccessTypes.DeleteGotVersionsRequest
          example: !include examples/deleteGotVersionsRequest.json
      responses:
        202:
          description: |
            Renvoie le statut de l'opération de suppression des versions des groupes d'objets
          body:
            application/json:
              description: Operation de suppression des versions des groupes d'objets acceptée
              type: AccessTypes.DeleteGotVersionsResponse
              example: !include examples/deleteGotVersionsResponse.json
        500:
          description: Renvoie le statut final de l'opération de suppression des groupes d'objets en KO
          body:
            application/json:
              description: Rapport final de l'opération de suppression des groupes d'objets

  ObjectAccessRequestCreation:
    description: |
      Création d'une demandes d'accès à un objet d'archives associé à une unité d'archives.

      Si l'objet est persisté sur une offre de stockage « froide », une demandes d'accès est créée, et renvoyée.

      Si l'objet est persisté sur une offre de stockage « chaude », aucune demandes d'accès n'est renvoyée.

      La création d'une demandes d'accès, permet de pré-commander des données persistées sur une offre « froide », et de le mettre à disposition pour lecture.

      L'appelant doit monitorer périodiquement le statut des demandes d'accès (typiquement toutes les quelques minutes ou heures).

      Une fois une demandes d'accès est devient prête (**READY**), la disponibilité immédiate des données depuis l'offre « froide » est garantie.

      La durée d'expiration d'une demandes d'accès, qui court à partir du moment où cette dernière devient prête, est paramétrée par l'administrateur de Vitam.

      Au bout d'une durée configurée par l'administrateur, une demandes d'accès est purgée de l'offre (**NOT_FOUND**).

      Une fois une demandes d'accès est expirée (**EXPIRED**) ou supprimée, la disponibilité des données n'est alors plus garantie.

      **IMPORTANT:** Les demandes d'accès créées doivent être supprimées au plus vite, dès que la donnée a été récupérée.
      Un trop grand nombre et/ou volume de demandes d'accès non supprimées risque d'impacter les capacité de stockage du cache de l'offre « froide », ainsi que la stabilité de l'offre.

      Permissions requises:
        - units:id:objects:accessrequests:create

    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader200,
     StandardTraits.StandardHeader401, StandardTraits.StandardHeader404, StandardTraits.StandardHeader500]
    headers:
      Accept:
        required: true
        enum: [ "application/json" ]
      Content-Type:
        required: true
        enum: [ "application/json" ]
      X-Qualifier:
        required: true
        type: string
        description: Le qualifier de l'objet binaire
        enum:
          - BinaryMaster
          - Dissemination
          - Thumbnail
          - TextContent
      X-Version:
        required: true
        type: integer
        description: La version de l'objet (Ex. 1, 2...)

    responses:
      200:
        description: |
          Renvoie le résultat de création de la demande d'accès à l'objet d'archives
        body:
          application/json:
            description: Résultat de création de la demande d'accès à l'objet d'archives
            type: AccessTypes.ObjectAccessRequestCreationResponse
            example: !include examples/objectAccessRequestCreationResponse.json

  CheckAccessRequestStatuses:
    description: |
      Vérification du statut d'un lot de demandes d'accès.

      Pour chaque demande d'accès, un statut est renvoyé :
        - **READY** : La demande d'accès est prête.
        - **NOT_READY** : La demande d'accès est n'est pas encore prête.
        - **EXPIRED** : La demande d'accès a expiré.
        - **NOT_FOUND** : La demande d'accès n'est pas trouvée (supprimée, purgée au bout d'un délais après expiration, non existante ou non visible depuis le contexte du tenant d'appel...)

      L'appelant doit monitorer périodiquement le statut des demandes d'accès (typiquement toutes les quelques minutes ou heures). Une fréquence d'appel trop rapide peut avoir un impact sur les performances de l'offres en particulier, et de Vitam en général.

      Une demande d'accès est uniquement visible dans le contexte de son tenant, et sera donc perçue comme NOT_FOUND depuis tout autre tenant.

      Permissions requises:
        - accessrequests:check

    body:
      application/json:
        description: |
          Liste (non vide, sans doublons) des demandes d'accès à vérifier.
        type: AccessTypes.CheckAccessRequestStatusesRequest
        example: !include examples/checkAccessRequestStatusesRequest.json

    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader200,
     StandardTraits.StandardHeader406, StandardTraits.StandardHeader500]
    headers:
      Accept:
        required: true
        enum: [ "application/json" ]
      Content-Type:
        required: true
        enum: [ "application/json" ]
    responses:
      200:
        description: |
          Renvoie le statut pour chacune des demandes d'accès.
        body:
          application/json:
            description: Statut des demandes d'accès
            type: AccessTypes.CheckAccessRequestStatusesResponse
            example: !include examples/checkAccessRequestStatusesResponse.json


  DeleteAccessRequest:
    description: |
      Suppression d'une demande d'accès.

      Une fois une demandes d'accès supprimée, la disponibilité des données n'est alors plus garantie.

      La suppression d'une demande d'accès inexistante est sans effet (idempotence). De même, une demande d'accès est uniquement visible dans le contexte de son tenant.

      **IMPORTANT:** Les demandes d'accès créées doivent être supprimées au plus vite, dès que la donnée a été récupérée.
      Un trop grand nombre et/ou volume de demandes d'accès non supprimées risque d'impacter les capacité de stockage du cache de l'offre « froide », et la stabilité de l'offre.

      Permissions requises:
        - accessrequests:remove

    body:
      application/json:
        description: |
          La demande d'accès à supprimer.
        type: AccessTypes.accessRequestReference
        example: !include examples/RemoveAccessRequest.json

    is: [ StandardTraits.StandardOptionalHeader, StandardTraits.AccessContractHeader, StandardTraits.StandardHeader200,
     StandardTraits.StandardHeader406, StandardTraits.StandardHeader500]
    headers:
      Accept:
        required: true
        enum: [ "application/json" ]
      Content-Type:
        required: true
        enum: [ "application/json" ]
    responses:
      200:
        description: |
          Succès du traitement de la requête.
