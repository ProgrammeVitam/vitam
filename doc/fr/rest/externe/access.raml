#%RAML 1.0

title: API-Vitam - Access
version: v1
baseUri: https://api.vitam.gouv.fr/access-external/{version}
protocols: [ HTTPS ]
annotationTypes:
  deprecated:
    type: string


uses:
  StandardTypes: libraries/StandardTypes.raml
  StandardTraits: libraries/StandardTraits.raml
  AccessTypes: libraries/AccessTypes.raml
  AccessTraits: libraries/AccessTraits.raml
  DslTypes: libraries/DslTypes.raml

mediaType: application/json

types:
  _reserved:
    type: string

documentation:
  - title: Avertissements
    content: !include docs-fr/avertissement.md

  - title: Licence
    content: !include docs-fr/license.md

  - title: API Access
    content: !include docs-fr/access.md

  - title: Champs d'application sur les Units
    content: |
      Les principes sont les suivants :
        - Le POST peut être utilisé pour des opérations de mises à jour en masse. Il peut aussi être utilisé avec le header *X-Http-Method-Override: GET* pour réaliser un GET avec un BODY.
        - Le PUT est utilisé pour réaliser un update partiel (déprécié), à partie de la release 16, le POST (massUpdate) doit être utilisé pour effectuer une mise à jour d'unités archivistiques.
        - Pas de DELETE car ceci relève de l'élimination
        - GET correspond à la recherche ou l'accès selon la présence d'un body ou non
        - Un seul Object par Unit max
        - Une requête depuis un Unit signifie recherche relative depuis celui-ci (roots = this)
        - Accept: **application/json** signifie les métadonnées au format Json
        - Accept: **application/octet-stream** signifie le retour du contenu binaire de l'Object


/units:
  displayName: ArchiveUnits
  description: |
   API qui définit les requêtes pour accéder aux Unités d'archives.
   La requête utilise le langage de requête DSL de Vitam en entrée et retourne une liste d'Unités d'archives selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Unités d'archives.
      La requête utilise le langage de requête DSL de type **recherche multiple (SELECT MULTIPLE)** de Vitam en entrée et retourne une liste d'Unités d'archives selon le DSL Vitam en cas de succès.

      Permissions requises:
        - units:read
    is: [AccessTraits.AccessUnitResponse]
  post:
    description: |
      Requête qui déclanche la mise à jour de masse des métadonnées descriptives des unités archivistiques.
      **Sans le Header**, le point d'API est utilisé pour mettre à jour en masse les métadonnées descriptives des unités archivistiques. Possibilité de remplacer une chaîne de caractères par une autre vià l'opération $setregex.

      **Avec le Header**, La requête utilise le langage de requête DSL de type **recherche multiple (SELECT MULTIPLE)** de Vitam en entrée et retourne une liste d'Unités d'archives selon le DSL Vitam en cas de succès.
      La requête utilise POST avec X-Http-Method-Override: GET
      Permissions requises:
        - units:update
    is: [AccessTraits.AccessUpdateBatchUnitResponse, StandardTraits.OverrideGet]
    headers:
      X-Http-Method-Override:
        required: false

/units/byunitspersistentidentifier/{persistentIdentifier}:
  get:
    description: "Requête qui retourne la liste des unités d'archives correspondantes à l'identifiant pérenne fourni en entrée. La requête utilise le langage de requête (DSL) de Vitam en entrée pour filter et retourner que les informations demandées en cas de succès."
    uriParameters:
        persistentIdentifier:
          description: "L'identifiant pérenne des unités d'archive"
          type: string
          example: "ark:/22567/001a957db5eadaac"
          required: true
    Permissions requises:
      - units:unitsbypersistentidentifier:id:read
    responses:
      200:
        description: "Renvoie les unités d'archives correspondantes à l'identifiant pérenne fourni."
        body:
          application/json:
          example: !include libraries/examples/unit-persistence-identifier-search.json
      404:
        description: "Not found."
      500:
        description: "Internal Server Error."
      401:
        description: "Un authorized."
      301:
        description: "Units moved to another system."
      410:
        description: "Units eliminated"
    headers:
      X_ACCESS_CONTRAT_ID:
        description: "The contract name"
        type: string
        required: true
        example: "ACC-0001"
      X_TENANT_ID:
        description: "The tenant id"
        type: string
        required: true
        example: "1"

/objects/byunitspersistentidentifier/{persistentIdentifier}:
  get:
    description: "Télécharger le premier objet correspondant à l'identifiant pérenne d'une unité selon les critères passés en paramètre."
    uriParameters:
        persistentIdentifier:
          description: "L'identifiant pérenne de l'unité d'archive"
          type: string
          example: "ark:/22567/001a957db5eadaac"
          required: true
    queryParameters:
        version:
          required: false
          description: La version de l'objet binaire, par défaut la version 1.
        qualfier:
          required: false
          description: Le qualifier de l'objet binaire, par défaut 'BINARY_MASTER''.

    Permissions requises:
      - objects:unitsbypersistentidentifier:id:objects:read:binary
    responses:
        202:
          description: Retourne l'objet binaire qui correspond aux critères
          body:
            application/octet-stream:
              description: Binary object
        412:
          description: Precondition Failed, some predicates are incorrect, therefore the operation is not possible
          body:
            application/json:
      404:
        description: "Not found."
      500:
        description: "Internal Server Error."
      401:
        description: "Un authorized."
      301:
        description: "moved to another system."
      410:
        description: "eliminated"
    headers:
      Accept:
        required: true
        enum: [ "application/octet-stream" ]
      X_ACCESS_CONTRAT_ID:
        description: "The contract name"
        type: string
        required: true
        example: "ACC-0001"
      X_TENANT_ID:
        description: "The tenant id"
        type: string
        required: true
        example: "1"


/objects/byobjectspersistentidentifier/{persistentIdentifier}:
  get:
    description: "Télécharger le premier objet correspondant à l'identifiant pérenne fourni en entrée."
    uriParameters:
        persistentIdentifier:
          description: "L'identifiant pérenne de l'objet"
          type: string
          example: "ark:/22567/001a957db5eadaac"
          required: true

    Permissions requises:
      - objects:objectsbypersistentidentifier:id:read:binary
    responses:
        202:
          description: Retourne le premier objet binaire qui correspond aux critères
          body:
            application/octet-stream:
              description: Binary object
        412:
          description: Precondition Failed, some predicates are incorrect, therefore the operation is not possible
          body:
            application/json:
      404:
        description: "Not found."
      500:
        description: "Internal Server Error."
      401:
        description: "Un authorized."
      301:
        description: "moved to another system."
      410:
        description: "eliminated"
    headers:
      Accept:
        required: true
        enum: [ "application/octet-stream" ]
      X_ACCESS_CONTRAT_ID:
        description: "The contract name"
        type: string
        required: true
        example: "ACC-0001"
      X_TENANT_ID:
        description: "The tenant id"
        type: string
        required: true
        example: "1"


  /stream:
    get:
        description: |
          Requête qui déclenche la récupération de toutes les unités d'archives dans un Json Stream.

          Permissions requises:
            - units:stream

        is: [AccessTraits.AccessUnitStreamResponse]

  /rules:
    post:
      description: |
        Requête qui déclenche la mise à jour de masse des métadonnées de gestion d'unités d'archives.
        La requête utilise un POJO spécifique pour effectuer la mise à jour des éléments de gestion.

        Permissions requises:
          - units:rules:update

      is: [AccessTraits.UnitBatchUpdateRequest, AccessTraits.UnitBatchUpdateResponseAsync]

  /computedInheritedRules:
    displayName: Calcul des computedInheritedRules
    description: |
      Request Calcule/Supprime les règles héritées pour les unités archivistiques répondant aux critères de la requête DSL.
    post:
      description: |
        Request that will launch the computation

        Permissions requises:
          - computeInheritedRules:action
      is: [AccessTraits.UnitComputedInheritedRulesResponse]
    delete:
      description: |
        Request that will delete the computation

        Permissions requises:
          - computeInheritedRules:delete
      is: [AccessTraits.UnitComputedInheritedRulesDeleteResponse]

  /{idu}:
    uriParameters:
        idu:
          required: true
          description: Identifiant de l'unité d'archive.
    displayName: ArchiveUnit
    description: |
     API qui définit les requêtes pour accéder à une Unité d'archive.
     La requête utilise le langage de requête DSL de Vitam en entrée et retourne une liste d'Unités d'archives selon le DSL Vitam en cas de succès.
    get:
      description: |
       Requête qui retourne une Unité d'archive.
       La requête utilise le langage de requête DSL de type **recherche unitaire (GET BY ID)** de Vitam en entrée et retourne une liste d'Unités d'archives contenant 1 seul résultat selon le DSL Vitam en cas de succès.

       Permissions requises :
        - units:id:read:json
      is: [AccessTraits.AccessUniqueUnitResponse]
    put:
      (deprecated): This method is deprecated and will be removed. You should use POST on /units instead (using massUpdate).
      description: |
        **[DEPRECATED] - Be careful, this endpoint is no longer acceptable for updating units. Use POST /units instead.** <br/> <br/>
        Requête qui modifie une Unité d'archive. <br/>
        La requête utilise le langage de requête DSL de type **modification unitaire (UPDATE BY ID)** de Vitam en entrée et retourne le statut de la mise à jour en résultat selon le DSL Vitam en cas de succès.

        Permissions requises:
          - units:id:update
      is: [AccessTraits.AccessUpdateUnitResponse]

  /{idu}/objects:
      displayName: Object of one ArchiveUnit
      description: |
       API qui définit les requêtes pour accéder à l'Objet d'archives associé à l'Unité d'archives si elle existe.
       La requête utilise le langage de requête (DSL) de Vitam en entrée et retourne l'objet d'archives selon le DSL Vitam en cas de succès.
      get:
        description: |
          Requête qui retourne le résultat contenant un Object d'archives : ses métadonnées ou un de ses objets binaires.
          Dans le cas des métadonnées, la requête utilise le langage de requête DSL de type **recherche unitaire (GET BY ID)** de Vitam en entrée.
          'Accept' header est 'application/octet-stream' (objet binaire) ou 'application/json' (métadonnées)
          Permissions requises:
            - units:id:objects:read:json

            ou
            - units:id:objects:read:binary
        is: [AccessTraits.AccessUniqueObjectQualifierResponse, AccessTraits.AccessUniqueObjectResponse]
        headers:
          Accept:
            required: true
            enum: [ "application/octet-stream", "application/json" ]
      post:
        description: |
          Requête qui retourne le résultat contenant un Object d'archives : ses métadonnées ou un de ses objets binaires.
          Dans le cas des métadonnées, la requête utilise le langage de requête DSL de type **recherche unitaire (GET BY ID)** de Vitam en entrée.
          'Accept' header est 'application/octet-stream' (objet binaire) ou 'application/json' (métadonnées)
          La requête utilise POST avec X-Http-Method-Override: GET.
        is: [AccessTraits.AccessUniqueObjectQualifierResponse, AccessTraits.AccessUniqueObjectResponse, StandardTraits.OverrideGet]
        headers:
          X-Http-Method-Override:
            required: true
          Accept:
            required: true
            enum: [ "application/octet-stream", "application/json" ]

      /accessRequests:
        displayName: Demande d'Accès à une Object d'archives
        description: |
          Endpoint d'API pour la création de Demandes d'Accès depuis une offre froide à des Objets d'archives.
        post:
          is: [AccessTraits.ObjectAccessRequestCreation]

  /bulk:
    post:
      description: |
        Requête qui déclanche la mise à jour unitaire des métadonnées descriptives de plusieurs unités archivistiques.
        La requête utilise le langage de requête DSL de type **mise à jour unitaire de masse (BULK UPDATE)** de Vitam en entrée.
        Permissions requises:
          - units:bulk:update
      is: [AccessTraits.AccessBulkAtomicUpdateResponse]

/unitsWithInheritedRules:
  displayName: ArchiveUnits with inherited rules
  description: |
   API qui définit les requêtes pour accéder aux Unités d'archives avec leurs règles de gestion héritées.
   La requête utilise le langage de requête DSL de Vitam en entrée et retourne une liste d'Unités d'archives avec leurs règles de gestion selon le DSL Vitam en cas de succès.
  get:
    description: |
      Requête qui retourne des résultats contenant des Unités d'archives ainsi que leurs règles de gestion héritées.
      La requête utilise le langage de requête DSL de type **recherche multiple (SELECT MULTIPLE)** de Vitam en entrée et retourne une liste d'Unités d'archives avec leurs règles de gestion selon le DSL Vitam en cas de succès.

      Permissions requises:
        - unitsWithInheritedRules:read
    is: [AccessTraits.AccessUnitWithInheritedRulesResponse]

/objects:
  displayName: Groupe d'objet
  description: API qui définit l'ensemble des requêtes sur les groupes d'objets.
  get:
    description: |
      Requête qui retourne des résultats contenant des Groupes d'objets.
      La requête utilise le langage de requête DSL de type **recherche multiple (SELECT MULTIPLE)** de Vitam et peut utiliser l'opérateur $subobject (Voir documentation DSL) en entrée et retourne une liste d'Unités d'archives selon le DSL Vitam en cas de succès.

      Permissions requises:
        - objects:read
    is: [AccessTraits.AccessGOTResponse]
    body:
      application/json:
        description: Requête permettant de rechercher un ou plusieurs groupes d'objets
        example: !include libraries/examples/object-group-search.json
  post:
    description: |
      Requête qui retourne des résultats contenant des Groupes d'objets en utilisant le verbe POST et le header X-Http-Method-Override: GET.
      La requête utilise le langage de requête DSL de type **recherche multiple (SELECT MULTIPLE)** de Vitam et peut utiliser l'opérateur $subobject (Voir documentation DSL) en entrée et retourne une liste d'Unités d'archives selon le DSL Vitam en cas de succès.
    is: [AccessTraits.AccessGOTResponse, StandardTraits.OverrideGet]
    headers:
      X-Http-Method-Override:
        required: true
    body:
      application/json:
        description: Requête permettant de rechercher un ou plusieurs groupes d'objets
        example: !include libraries/examples/object-group-search.json
  /stream:
    get:
      description: |
        Requête qui déclenche la récupération de toutes les unités d'archives dans un Json Stream.
        Permissions requises:
          - objects:stream
      is: [AccessTraits.AccessObjectStreamResponse]

/revert/units:
  displayName: Restauration des métadonnées
  description: API qui restaure les métadonnées essentielles
  post:
    description: |
      Requête qui permet la restauration des métadonnées essentielles des unités archivistiques.

      Permissions requises:
        - units:update:revert
    is: [AccessTraits.RevertUnitResponse]
    body:
      type: object
      properties:
        force:
          description: true si on force la restauration, false sinon
          type: boolean
          example: false
        dslRequest:
          description: requete DSL pour filtrer les units à restaurer
          type: DslTypes.DslBatchProcessionQuery
        operationId:
          description: identifiant de l'opération à restaurer
          type: string
        $fields:
          description: les champs à restaurer
          type: string[]
      description: Requête permettant de rechercher un ou plusieurs groupes d'objets
      example: !include libraries/examples/revertRequest.json

/dipexport:
  displayName: DIP Export
  description: |
    API qui définit les requêtes pour générer un DIP (Dissemination Information Package : ZIP contenant les métadonnées et les objets) pour une sélection d'Unités d'archives.
    La requête utilise le langage de requête (DSL) de Vitam en entrée et va lancer un processus générant le DIP selon le DSL passé.
    Une autre requête pourra être exécutée par la suite pour télécharger le fichier Zip généré.
  post:
    description: |
          response : JSON asynchronous state / HTTP CODE 202 or  500 for Internal Server Error
          La requête utilise le langage de requête DSL de type **recherche multiple (SELECT MULTIPLE)** de Vitam en entrée.

          Permissions requises:
            - dipexport:create
    is: [AccessTraits.DipCreationResponseAsync]

  /{id}/dip/:
    uriParameters:
        id:
          required: true
          description: Identifiant de l'opération d'export DIP.
    displayName: Téléchargement du DIP
    description: |
      Télécharger le DIP généré par l'opération passée en paramètre
    get:
      headers:
        Accept:
          required: true
          enum: [ "application/octet-stream" ]
      description: |
        Requête qui retourne les résultats composés des métadonnées et des objets binaires dans un fichier zip
        'Accept' header est 'application/octet-stream'

        Permissions requises:
          - dipexport:id:dip:read
      responses:
        202:
          description: Returns the generated zip file
          body:
            application/octet-stream:
              description: Binary object as a zip file
        412:
          description: Precondition Failed, some predicates are incorrect, therefore the operation is not possible
          body:
            application/json:

/v2/dipexport:
  displayName: DIP Export V2
  description: |
    API qui définit les requêtes pour générer un DIP (Dissemination Information Package : ZIP contenant les métadonnées et les objets) pour une sélection d'Unités d'archives.
    La requête est composée  d'une dslRequest (DSL) et d'autres paramètres nécessaires pour le service. Un processus générant le DIP V2 selon le DSL passé sera lancé.
    Une autre requête pourra être exécutée par la suite pour télécharger le fichier Zip généré.
  post:
    description: |
          response : JSON asynchronous state / HTTP CODE 202 or  500 for internal error
          La requête utilise le langage de requête DSL de type **recherche multiple (SELECT MULTIPLE)** de Vitam en entrée.
    is: [AccessTraits.DipV2Async]


/transfers:
  displayName: Transfert d'archives
  description: |
    API qui définit les requêtes pour générer un transfert d'une sélection d'unités d'archives.
    La requête est composée  d'une dslRequest (DSL) et d'autres paramètres nécessaires pour le service. Un processus générant le SIP selon le DSL passé sera lancé.
    Une autre requête pourra être exécutée par la suite pour télécharger le fichier Zip généré.
  post:
    description: |
          response : JSON asynchronous state / HTTP CODE (202, 200)  or  (412, 500 else)
          La requête utilise le langage de requête DSL de type **recherche multiple (SELECT MULTIPLE)** de Vitam en entrée.

          Permissions requises:
            - transfers:create
    is: [AccessTraits.TransferCreationResponseAsync]

  /{id}/sip/:
    uriParameters:
        id:
          required: true
          description: Identifiant de l'opération du transfert d'archives.
    displayName: Téléchargement du SIP
    description: |
      Télécharger le SIP généré par l'opération passée en paramètre.
    get:
      headers:
        Accept:
          required: true
          enum: [ "application/octet-stream" ]
      description: |
        Requête qui retourne un SIP au format ZIP
        'Accept' header est 'application/octet-stream'.

        Permissions requises:
          - transfers:id:sip:read
      responses:
        202:
          description: Returns the generated SIP file
          body:
            application/octet-stream:
              description: Binary object as a SIP file
        412:
          description: Precondition Failed, some predicates are incorrect, therefore the operation is not possible
          body:
            application/json:

/elimination:
  displayName: Elimination
  description: |
    API qui définit les requêtes pour l'élimination des unités archivistiques.

  /analysis:
    displayName: Opération d'analyse des unités archivistiques éliminables.
    description: |
      Opération d'analyse des unités archivistiques éliminables.
    post:
      headers:
        Accept:
          required: true
          enum: [ "application/json" ]
      description: |
        Exécute une opération d'analyse d'élimination des unités archivistiques.

        Permissions requises :
          - elimination:analysis
      is: [AccessTraits.EliminationResponseAsync]
      responses:
        200:
          description: Success
          body:
            application/json:
              description: Success response
        412:
          description: Precondition Failed, some predicates are incorrect, therefore the operation is not possible
          body:
            application/json:
  /action:
    displayName: Opération d'élimination définitive des unités archivistiques éliminables.
    description: |
      Opération d'élimination définitive des unités archivistiques éliminables.
    post:
      headers:
        Accept:
          required: true
          enum: [ "application/json" ]
      description: |
        Exécute une opération d'élimination définitive des unités archivistiques.

        Permissions requises:
          - elimination:action
      is: [AccessTraits.EliminationResponseAsync]
      responses:
        200:
          description: Success
          body:
            application/json:
              description: Success response
        412:
          description: Precondition Failed, some predicates are incorrect, therefore the operation is not possible
          body:
            application/json:

/storageaccesslog:
  displayName: Journaux d'accès
  description: API qui permet de lancer des actions relatives aux journaux d'accès aux objets binaires des unités archivistiques.
  is: [ StandardTraits.StandardOptionalHeader ]
  get:
    headers:
      Accept:
        required: true
        enum: [ "application/json" ]
      Content-Type:
        required: true
        enum: [ "application/json" ]
    body:
      application/json:
        description: Requête de récupération de fichiers de log d'accès
        type: object
        properties:
          StartDate?:
            description: Date de début des fichiers de log (un fichier de log contenant des logs après et avant cette date est remonté au complet)
            type: string
            example: "2018-11-14"
          EndDate?:
            description: Date de fin des fichiers de log (un fichier de log contenant des logs après et avant cette date est remonté au complet)
            type: string
            example: "2018-11-14"
        example: !include libraries/examples/storage-accesslog-query.json
    description: |
        Lancer la récupération des journaux sous la forme d'un ZIP contenant des fichiers de log au format Json Lines.
        La requête prend en paramètre un objet Json pouvant contenir une date de début (StartDate) ou de fin (EndDate) pour filtrer les journaux.

        Permissions requises:
          - storageaccesslog:read:binary
    responses:
        200:
          description: Success
          body:
                application/octet-stream:
        412:
          description: Precondition Failed, date in json input body is not parsable, therefore the operation is not possible
          body:
            application/json:

/preservation:
  displayName: Préservation
  description: |
    Opération de préservation des unités archivistiques.
  post:
    headers:
      Accept:
        required: true
        enum: [ "application/json" ]
    description: |
      Exécute une opération de préservation sur (une ou) les unités archivistiques.

      Permissions requises:
        - preservation:update
    is: [AccessTraits.PreservationResponseAsync]
    responses:
      200:
        description: Success
        body:
          application/json:
            description: Success response
      412:
        description: Precondition Failed, some predicates are incorrect, therefore the operation is not possible
        body:
          application/json:

/transfers/reply:
  displayName: Transfer Reply
  description: |
    Démarage du traitement de l'ATR adressé par le SAE cible dans le cas d'un transfert
  post:
    headers:
      Accept:
        required: true
        enum: [ "application/xml" ]
      Content-Type:
        required: true
        enum: [ "application/json" ]
    description: |
      Démarage du traitement de l'ATR adressé par le SAE cible dans le cas d'un transfert.

      Permissions requises:
        - transfers:reply
    is: [AccessTraits.TransferReplyResponseAsync]
    responses:
      200:
        description: Lancement du traitement
        body:
          application/json:
      500:
        description: Des erreurs interne
        body:
          application/json:


/reclassification:
  displayName: Mise à jour d'arborescence
  description: API qui définit les requêtes liées à la mise à jour d'arborescence des unités archivistiques
  is: [ StandardTraits.StandardOptionalHeader ]
  post:
    headers:
      Accept:
        required: true
        enum: [ "application/json" ]
      Content-Type:
        required: true
        enum: [ "application/json" ]
    description: Lancement d'une ou plusieurs modifications d'arborescence d'unité archivistiques
    body:
      application/json:
        description: |
          Requête spécifiant les unités archivistiques à déplacer dans l'arborescence (ajout/suppression de parents - Tableau de DSL au format RECLASSIFICATION_QUERY).
          Chaque DSL utilise des mots clés spécifique dans la partie $action et cible une ou plusieurs unités archivistiques parents dans la partie $query.
          L'opérateur $add permet d'ajouter un parent à l'unité archivistique ciblée. L'opérateur $pull permet de retirer un parent à l'unité archivistique cible.
          Seul le champs #unitups doit être modifié grâce à cette requête.

          Permissions requises:
            - reclassification:update
        type: object[]
        example: !include libraries/examples/reclassification.json
    responses:
      202:
        description: Succès

/:
  displayName: Endpoints
  description: |
   API qui liste les endpoints de la ressource /access-external/{version}.
  options:
    description: |
      Requête qui retourne la liste des endpoints
    is: [ StandardTraits.StandardHeader200,
      StandardTraits.StandardHeader404, StandardTraits.StandardHeader503 ]

/status:
  displayName: Status
  get:
    description: Vérification de l'état de l'api
    is: [ StandardTraits.StandardHeader204,
      StandardTraits.StandardHeader401, StandardTraits.StandardHeader404, StandardTraits.StandardHeader503 ]

/deleteGotVersions:
  displayName: Suppression des versions des groupes d'objets
  description: |
    Opération de suppression des versions des groupes d'objets.
  post:
    headers:
      Accept:
        required: true
        enum: [ "application/json" ]
    description: |
      Exécute une opération de suppression des versions des groupes d'objets.

      Permissions requises:
        - objects:deleteGotVersions
    is: [AccessTraits.DeleteGotVersionsResponseAsync]
    responses:
      200:
        description: Success
        body:
          application/json:
            description: Success response
      412:
        description: Precondition Failed, some predicates are incorrect, therefore the operation is not possible
        body:
          application/json:

/accessRequests:
  displayName: Gestion des demandes d'accès depuis offre froide.
  description: |
    APIs de gestion des demandes d'accès à des objets depuis une offre froide.
  get:
    is: [AccessTraits.CheckAccessRequestStatuses]
  delete:
    is: [AccessTraits.DeleteAccessRequest]
