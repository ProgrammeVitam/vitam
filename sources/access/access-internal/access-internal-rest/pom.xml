<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>fr.gouv.vitam</groupId>
        <artifactId>access-internal</artifactId>
        <version>3.0.10-SNAPSHOT</version>
    </parent>

    <artifactId>access-internal-rest</artifactId>
    <name>Access Internal Rest</name>
    <properties>
        <unix.name>access-internal</unix.name>
        <unix.user>vitam</unix.user>
        <unix.group>vitam</unix.group>
    </properties>

    <dependencies>
        <dependency>
            <groupId>fr.gouv.vitam</groupId>
            <artifactId>common-private</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>fr.gouv.vitam</groupId>
            <artifactId>access-internal-common</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>fr.gouv.vitam</groupId>
            <artifactId>access-internal-core</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>fr.gouv.vitam</groupId>
            <artifactId>access-internal-client</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>fr.gouv.vitam</groupId>
            <artifactId>metadata-client</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>fr.gouv.vitam</groupId>
            <artifactId>access-internal-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>fr.gouv.vitam</groupId>
            <artifactId>processing-management-client</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>fr.gouv.vitam</groupId>
            <artifactId>processing-monitoring</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>io.rest-assured</groupId>
            <artifactId>rest-assured</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>fr.gouv.vitam</groupId>
            <artifactId>common-junit</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>



    <build>
        <plugins>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <header>../../../licenses/cecill21.txt</header>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- Dependency manipulation (copy, unpack) and analysis. -->
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/dependencies</outputDirectory>
                            <overWriteReleases>false</overWriteReleases>
                            <overWriteSnapshots>false</overWriteSnapshots>
                            <overWriteIfNewer>true</overWriteIfNewer>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-config-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/conf/sysconfig</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/conf</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <!-- Debian -->
                    <execution>
                        <id>copy-debian-controlFiles</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/control</outputDirectory>
                            <overwrite>true</overwrite>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/deb/control</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-systemd-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/systemd</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>src/main/systemd</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-script-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/script</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${basedir}/src/main/script</directory>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>fr.gouv.vitam.access.internal.rest.AccessInternalMain</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>rpm-maven-plugin</artifactId>
                <configuration>
                    <disabled>false</disabled>
                    <license>CeCILL 2.1</license>
                    <distribution>Vitam Project</distribution>
                    <group>Application/Archiving</group>
                    <packager>Vitam Package Team</packager>
                    <defineStatements/>
                    <targetOS>linux</targetOS>
                    <requires>
                        <require>systemd</require>
                        <require>${jdk.version.rpm}</require>
                        <require>vitam-user-${unix.user}</require>
                    </requires>
                    <defaultDirmode>750</defaultDirmode>
                    <defaultFilemode>640</defaultFilemode>
                    <defaultUsername>${unix.user}</defaultUsername>
                    <defaultGroupname>${unix.group}</defaultGroupname>
                    <mappings>
                        <mapping>
                            <directory>/vitam/lib/${unix.name}</directory>
                            <artifact/>
                            <dependency/>
                        </mapping>
                        <mapping>
                            <directory>/vitam/conf/${unix.name}</directory>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/conf</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/vitam/script/${unix.name}</directory>
                            <!-- OMA : change to 750 and change directive if not correct
                                                        <defaultFileMode>640</defaultFileMode>
                            -->
                            <filemode>750</filemode>
                            <username>${unix.user}</username>
                            <groupname>${unix.user}</groupname>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/script</location>
                                </source>
                            </sources>
                        </mapping>
                        <mapping>
                            <directory>/usr/lib/systemd/system/</directory>
                            <filemode>644</filemode>
                            <username>root</username>
                            <groupname>root</groupname>
                            <directoryIncluded>false</directoryIncluded>
                            <sources>
                                <source>
                                    <location>${project.build.directory}/systemd</location>
                                </source>
                            </sources>
                        </mapping>
                    </mappings>
                    <!-- Systemd hook scriptlets -->
                    <postinstallScriptlet>
                        <script>%systemd_post vitam-${unix.name}.service</script>
                    </postinstallScriptlet>
                    <preremoveScriptlet>
                        <script>%systemd_preun vitam-${unix.name}.service</script>
                    </preremoveScriptlet>
                    <postremoveScriptlet>
                        <script>%systemd_postun vitam-${unix.name}.service</script>
                    </postremoveScriptlet>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.version}</version>
            </plugin>

            <plugin>
                <artifactId>jdeb</artifactId>
                <groupId>org.vafer</groupId>
                <configuration>
                    <snapshotExpand>true</snapshotExpand>
                    <skip>false</skip>
                    <controlDir>${project.build.directory}/control</controlDir>
                    <dataSet>

                        <!-- Artifacts -->
                        <data>
                            <src>${project.build.directory}/${project.build.finalName}.jar</src>
                            <type>file</type>
                            <mapper>
                                <type>perm</type>
                                <user>${unix.user}</user>
                                <group>${unix.group}</group>
                                <filemode>0644</filemode>
                                <prefix>/vitam/lib/${unix.name}/</prefix>
                            </mapper>
                        </data>

                        <data>
                            <src>${project.build.directory}/dependencies</src>
                            <type>directory</type>
                            <missingSrc>ignore</missingSrc>
                            <mapper>
                                <type>perm</type>
                                <user>${unix.user}</user>
                                <group>${unix.group}</group>
                                <filemode>0644</filemode>
                                <prefix>/vitam/lib/${unix.name}</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.build.directory}/script</src>
                            <type>directory</type>
                            <missingSrc>ignore</missingSrc>
                            <mapper>
                                <type>perm</type>
                                <user>${unix.user}</user>
                                <group>${unix.group}</group>
                                <filemode>0755</filemode>
                                <prefix>/vitam/script/${unix.name}</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.build.directory}/conf</src>
                            <type>directory</type>
                            <missingSrc>ignore</missingSrc>
                            <mapper>
                                <type>perm</type>
                                <user>${unix.user}</user>
                                <group>${unix.group}</group>
                                <filemode>0750</filemode>
                                <prefix>/vitam/conf/${unix.name}</prefix>
                            </mapper>
                        </data>
                        <data>
                            <src>${project.build.directory}/systemd/</src>
                            <type>directory</type>
                            <mapper>
                                <type>perm</type>
                                <user>${unix.user}</user>
                                <group>${unix.group}</group>
                                <filemode>0755</filemode>
                                <prefix>/lib/systemd/system/</prefix>
                            </mapper>
                        </data>

                        <!-- Additional templates -->
                        <data>
                            <type>template</type>
                            <paths>
                                <path>/vitam/tmp/${unix.name}</path>
                                <path>/vitam/log/${unix.name}</path>
                            </paths>
                            <mapper>
                                <type>perm</type>
                                <user>${unix.user}</user>
                                <group>${unix.group}</group>
                            </mapper>
                        </data>

                    </dataSet>
                </configuration>
            </plugin>

        </plugins>
    </build>

</project>
