<?xml version="1.0" encoding="UTF-8"?>
<job-scheduling-data xmlns="http://www.quartz-scheduler.org/xml/JobSchedulingData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.quartz-scheduler.org/xml/JobSchedulingData https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd" version="1.8">

    <processing-directives>
        <!-- if there are any jobs/trigger in scheduler of same name (as in this
            file), overwrite them -->
        <overwrite-existing-data>true</overwrite-existing-data>
        <!-- if there are any jobs/trigger in scheduler of same name (as in this
            file), and over-write is false, ignore them rather then generating an error -->
        <ignore-duplicates>true</ignore-duplicates>
    </processing-directives>

    <schedule>
        <job>
            <name>StoreGraphJob</name>
            <group>Metadata</group>
            <description>Job for storing graph</description>
            <job-class>fr.gouv.vitam.scheduler.server.job.StoreGraphJob</job-class>
        </job>

        <trigger>
            <cron>
                <name>StoreGraphTrigger</name>
                <group>Metadata</group>
                <job-name>StoreGraphJob</job-name>
                <job-group>Metadata</job-group>
                <cron-expression>0 10/30 * * * ?</cron-expression>
            </cron>
        </trigger>
    </schedule>
   <schedule>
        <job>
            <name>ProcessObsoleteComputedInheritedRulesJob</name>
            <group>Metadata</group>
            <description>Job for process obsolete computed inherited rules</description>
            <job-class>fr.gouv.vitam.scheduler.server.job.ProcessObsoleteComputedInheritedRulesJob</job-class>
        </job>

        <trigger>
            <cron>
                <name>ProcessObsoleteComputedInheritedRulesTrigger</name>
                <group>Metadata</group>
                <job-name>ProcessObsoleteComputedInheritedRulesJob</job-name>
                <job-group>Metadata</job-group>
                <cron-expression>0 30 2 * * ?</cron-expression>
            </cron>
        </trigger>
    </schedule>

    <schedule>
        <job>
            <name>PurgeDipJob</name>
            <group>Metadata</group>
            <description>Job for purging Dip</description>
            <job-class>fr.gouv.vitam.scheduler.server.job.PurgeDipJob</job-class>
        </job>

        <trigger>
            <cron>
                <name>PurgeDipJobTrigger</name>
                <group>Metadata</group>
                <job-name>PurgeDipJob</job-name>
                <job-group>Metadata</job-group>
                <cron-expression>0 0 * * * ?</cron-expression>
            </cron>
        </trigger>
    </schedule>

   <schedule>
        <job>
            <name>PurgeSipJob</name>
            <group>Metadata</group>
            <description>Job for purging Sip</description>
            <job-class>fr.gouv.vitam.scheduler.server.job.PurgeSipJob</job-class>
        </job>

        <trigger>
            <cron>
                <name>PurgeSipJobTrigger</name>
                <group>Metadata</group>
                <job-name>PurgeSipJob</job-name>
                <job-group>Metadata</job-group>
                <cron-expression>0 25 2 * * ?</cron-expression>
            </cron>
        </trigger>
    </schedule>

    <schedule>
        <job>
            <name>AuditDataConsistencyMongoEsJob</name>
            <group>Metadata</group>
            <description>MongoDB and Elasticsearch data consistency audit Job</description>
            <job-class>fr.gouv.vitam.scheduler.server.job.AuditDataConsistencyMongoEsJob</job-class>
            <durability>true</durability>
            <recover>true</recover>
        </job>
    </schedule>
</job-scheduling-data>