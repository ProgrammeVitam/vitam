---
- name: Create temporary PEM certificate
  local_action: shell openssl pkcs12 -in {{ inventory_dir }}/keystores/client-external/keystore_vitam-admin-int.p12 -out {{ inventory_dir }}/keystores/client-external/keystore_vitam-admin-int.pem -passin pass:{{ keystores.client_external.vitam_admin_int }} -passout pass:{{ keystores.client_external.vitam_admin_int }} -nodes
  no_log: "{{ hide_passwords_during_deploy }}"
  vars:
     ansible_become: no

- name: Set URL definition
  set_fact:
    vitamurl: "{% if vitam_struct.https_enabled == true %}https{% else %}http{% endif %}://{{ hostvars[groups['hosts_access_external'][0]]['ip_service'] }}:{{ vitam.accessexternal.port_service }}/admin-external/v1/ingestcontracts"


- name: Copy temporary PEM certificate
  copy:
    src: "{{ inventory_dir }}/keystores/client-external/keystore_vitam-admin-int.pem"
    dest: "{{ vitam_defaults.folder.root_path }}/tmp/{{ vitam_struct.vitam_component }}/keystore_vitam-admin-int.pem"
    remote_src: no
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"

- name: Ensure service is started
  service:
    name: "vitam-{{ vitam_struct.vitam_component }}"
    state: started

- name: Wait for service to be up'n'running on business port
  wait_for:
    host: "{{ ip_service }}"
    port: "{{ vitam_struct.port_service }}"
    timeout: "{{ vitam_defaults.services.start_timeout }}"
  run_once: true

- name: Get ingestcontracts list for R9 migration for all tenants
  uri:
    url: "{{ vitamurl }}"
    method: GET
    client_cert: "{{ vitam_defaults.folder.root_path }}/tmp/{{ vitam_struct.vitam_component }}/keystore_vitam-admin-int.pem"
    headers:
      Connection: "keep-alive"
      X-Tenant-Id: "{{ item }}"
    body: "{\"$query\": { }, \"$projection\": {}}"
    body_format: "json"
    return_content: yes
    validate_certs: false
  register: ingestcontracts_for_tenant
  loop: "{{ vitam_tenant_ids }}"
  run_once: true

- name: Compute result
  set_fact:
    contracts_per_tenant:
      tenant: "{{ item.invocation.module_args.headers['X-Tenant-Id'] }}"
      contracts_list: "{{ item.json | json_query('\"$results\"[*].Identifier') }}"
  loop: "{{ ingestcontracts_for_tenant.results }}"
  register: compute_contracts_result
  run_once: true

- set_fact:
    contracts_per_tenant_result: "{{ compute_contracts_result.results | map(attribute='ansible_facts.contracts_per_tenant') | list }}"
  run_once: true

- name: Launch ingestcontracts R9 migration for all tenants
  uri:
    url: "{{ vitamurl }}/{{ item.1 | trim }}"
    method: PUT
    client_cert: "{{ vitam_defaults.folder.root_path }}/tmp/{{ vitam_struct.vitam_component }}/keystore_vitam-admin-int.pem"
    headers:
      X-Tenant-Id: "{{ item.0.tenant }}"
      Accept: "application/json"
      Content-Type: "application/json;charset=UTF-8"
    body: "{\"$action\":[{\"$set\":{\"CheckParentLink\":\"AUTHORIZED\"}}]}"
    body_format: json
    return_content: yes
    validate_certs: false
  loop: "{{ contracts_per_tenant_result | subelements('contracts_list') }}"
  run_once: true

- name: remove temporary PEM certificate
  file:
    path: "{{ vitam_defaults.folder.root_path }}/tmp/{{ vitam_struct.vitam_component }}/keystore_vitam-admin-int.pem"
    state: absent

- name: remove temporary pem file in ansible
  local_action:
    module: file
    path:  "{{ inventory_dir }}/keystores/client-external/keystore_vitam-admin-int.pem"
    state: absent