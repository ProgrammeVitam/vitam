---

- name: "Update mongodb packages ({{ mongo_version }})"
  yum:
    name:
      - "mongodb-org-mongos-{{ mongo_version }}"
      - "mongodb-org-shell-{{ mongo_version }}"
    state: present
    update_cache: yes   # make sure cache is up to date for upgrade
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"
  when: ansible_distribution == "CentOS"

- name: "Update mongodb packages ({{ mongo_version }})"
  apt:
    name:
      - "mongodb-org-mongos={{ mongo_version }}"
      - "mongodb-org-shell={{ mongo_version }}"
    state: present
    update_cache: yes   # make sure cache is up to date for upgrade
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"
  when: ansible_distribution == "Debian"

- name: Make sure the service is restarted
  systemd:
    name: vitam-mongos
    enabled: "{{ mongodb.at_boot | default(service_at_boot) }}"
    state: restarted

- name: Check the service port
  wait_for:
    host: "{{ ip_service }}"
    port: "{{ mongodb.mongos_port }}"
    timeout: "{{ vitam_defaults.services.start_timeout }}"

- name: Copy check_mongos database script
  copy:
    src: check_mongos.js
    dest: "{{ vitam_defaults.folder.root_path }}/script/mongos/"
    owner: "{{ vitam_defaults.users.vitamdb }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"

- name: Check mongos
  shell: "mongosh {{ ip_service }}:{{ mongodb.mongos_port }}/admin -u {{ mongodb[mongo_cluster_name].admin.user }} -p {{ mongodb[mongo_cluster_name].admin.password }} --quiet --file {{ vitam_defaults.folder.root_path }}/script/mongos/check_mongos.js"
  no_log: "{{ hide_passwords_during_deploy }}"
  ignore_errors: true # To properly catch output on the next task
  register: output_check_mongos

- name: Fail if check mongos is not succeeded
  assert:
    fail_msg: "{{ output_check_mongos.stderr_lines }}"
    success_msg: "{{ output_check_mongos.stdout_lines }}"
    that: output_check_mongos.rc == 0
