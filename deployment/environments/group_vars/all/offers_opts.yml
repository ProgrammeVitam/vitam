# This is the default vitam strategy ('default'). It is mandatory and must define a referent offer.
# This list of offers is ordered. It can and has to be completed if more offers are necessary
# Strategy order (1st has to be the preferred one)
vitam_strategy:
  - name: offer-fs-1
    referent: true
#    id: idoffre # OPTIONAL, but IF ACTIVATED, MUST BE UNIQUE & SAME if on another site
# Tape offer mustn't be referent (referent: false) and should be configured as asynchrone read (asyncRead: true)
#  - name: offer-tape-1
#    referent: false
#    asyncRead: true
#    id: idoffre # OPTIONAL, but IF ACTIVATED, MUST BE UNIQUE & SAME if on another site
# status : enable (value=ACTIVE, default value) or disable (value=INACTIVE) this offer
#    status: ACTIVE
#    vitam_site_name: prod-dc2
#  - name: offer-swift-1
# Example :
#  - name: distant
#    referent: true
#    status: INACTIVE
#    vitam_site_name: distant-dc2
#    id: idoffre # OPTIONAL, but IF ACTIVATED, MUST BE UNIQUE & SAME if on another site

# WARNING : multi-strategy is a BETA functionality
# More strategies can be added but are optional
# Strategy name must only use [a-z][a-z0-9-]* pattern
# This list of offers is ordered. It can and has to be completed if more offers are necessary
# Every strategy can define at most one referent offer.
# other_strategies:
#  metadata:
#    - name: offer-fs-1
#      referent: true
#    - name: offer-fs-2
#      referent: false
#  binary:
#    - name: offer-fs-2
#      referent: false
#    - name: offer-s3-1
#      referent: false

# DON'T forget to add associated passwords in vault-vitam.yml with same tree when using provider openstack-swift*
# ATTENTION !!! Each offer has to have a distinct name, except for clusters binding a same physical storage
# WARNING : for offer names, please only use [a-z][a-z0-9-]* pattern
vitam_offers:
  offer-fs-1:
    # param can be filesystem-hash (recomended) or filesystem (not recomended)
    provider: filesystem-hash
    # Offer log compaction
    offer_log_compaction:
      ## Expiration, here offer logs 21 days old will be compacted
      expiration_value: 21
      ## Choose one of "MILLENNIA", "HALF_DAYS", "MILLIS", "FOREVER", "MICROS", "CENTURIES", "DECADES", "YEARS", "DAYS", "SECONDS", "HOURS", "MONTHS", "WEEKS", "NANOS", "MINUTES", "ERAS"
      expiration_unit: "DAYS"
      ## Compaction bulk size here 10 000 offers logs (at most) will be compacted (Expected value between 1 000 and 200 000)
      compaction_size: 10000
    # Batch processing thread pool size
    maxBatchThreadPoolSize: 32
    # Batch metadata computation timeout in seconds
    batchMetadataComputationTimeout: 600
  offer-tape-1:
    provider: tape-library
    # Offer log compaction
    offer_log_compaction:
      ## Expiration, here offer logs 21 days old will be compacted
      expiration_value: 21
      ## Choose one of "MILLENNIA", "HALF_DAYS", "MILLIS", "FOREVER", "MICROS", "CENTURIES", "DECADES", "YEARS", "DAYS", "SECONDS", "HOURS", "MONTHS", "WEEKS", "NANOS", "MINUTES", "ERAS"
      expiration_unit: "DAYS"
      ## Compaction bulk size here 10 000 offers logs (at most) will be compacted (Expected value between 1 000 and 200 000)
      compaction_size: 10000
    # Batch processing thread pool size
    maxBatchThreadPoolSize: 32
    # Batch metadata computation timeout in seconds
    batchMetadataComputationTimeout: 600
  offer-swift-1:
    # provider : openstack-swift for v1 or openstack-swift-v3 for v3
    provider: openstack-swift-v3
    # swiftKeystoneAuthUrl : URL de connexion à keystone
    swiftKeystoneAuthUrl: https://openstack-hostname:port/auth/1.0
    # swiftDomain : domaine OpenStack dans lequel l'utilisateur est enregistré
    swiftDomain: domaine
    # swiftUser : identifiant de l'utilisateur
    swiftUser: utilisateur
    # swiftPassword: has to be set in vault-vitam.yml (encrypted) with same structure => DO NOT COMMENT OUT
    # swiftProjectName : nom du projet openstack
    swiftProjectName: monTenant
    # swiftUrl: optional variable to force the swift URL
    # swiftUrl: https://swift-hostname:port/swift/v1
    #SSL TrustStore
    swiftTrustStore: /chemin_vers_mon_fichier/monSwiftTrustStore.jks
    #Max connection (concurrent connections), per route, to keep in pool (if a pooling ConnectionManager is used) (by default 2 for Apache HttpClient)
    swiftMaxConnectionsPerRoute: 200
    #Max total connection (concurrent connections) to keep in pool (if a pooling ConnectionManager is used) (by default 20 for Apache HttpClient)
    swiftMaxConnections: 1000
    #Max time (in milliseconds) for waiting to establish connection
    swiftConnectionTimeout: 200000
    #Max time (in milliseconds) waiting for a data from the server (socket)
    swiftReadTimeout: 60000
    #Time (in seconds) to renew a token before expiration occurs (blocking)
    swiftHardRenewTokenDelayBeforeExpireTime: 60

    #Time (in seconds) to renew a token before expiration occurs
    swiftSoftRenewTokenDelayBeforeExpireTime: 300

    # Offer log compaction
    offer_log_compaction:
      ## Expiration, here offer logs 21 days old will be compacted
      expiration_value: 21
      ## Choose one of "MILLENNIA", "HALF_DAYS", "MILLIS", "FOREVER", "MICROS", "CENTURIES", "DECADES", "YEARS", "DAYS", "SECONDS", "HOURS", "MONTHS", "WEEKS", "NANOS", "MINUTES", "ERAS"
      expiration_unit: "DAYS"
      ## Compaction bulk size here 10 000 offers logs (at most) will be compacted (Expected value between 1 000 and 200 000)
      compaction_size: 10000
    # Batch processing thread pool size
    maxBatchThreadPoolSize: 32
    # Batch metadata computation timeout in seconds
    batchMetadataComputationTimeout: 600

  # example_offer-s3-1:
  #   # provider : can only be amazon-s3-v1 for Amazon SDK S3 V1
  #   provider: 'amazon-s3-v1'
  #   # s3Endpoint :  : URL of connection to S3
  #   s3Endpoint: http://172.17.0.2:6007
  #   # s3RegionName (optional):  Region name (default value us-east-1)
  #   s3RegionName: us-west-1
  #   # s3SignerType (optional):  Signing algorithm.
  #   #     - signature V4 : 'AWSS3V4SignerType' (default value)
  #   #     - signature V2 : 'S3SignerType'
  #   s3SignerType: AWSS3V4SignerType
  #   # s3PathStyleAccessEnabled (optional):  'true' to access bucket in "path-style", else "virtual-hosted-style" (false by default in java client, true by default in ansible scripts)
  #   s3PathStyleAccessEnabled: true
  #   # s3MaxConnections (optional): Max total connection (concurrent connections) (50 by default in java client, 1000 by default in ansible scripts)
  #   s3MaxConnections: 1000
  #   # s3ConnectionTimeout (optional): Max time (in milliseconds) for waiting to establish connection (10000 by default in java client, 200000 by default in ansible scripts)
  #   s3ConnectionTimeout: 200000
  #   # s3SocketTimeout (optional): Max time (in milliseconds) for reading from a connected socket (50000 by default)
  #   s3SocketTimeout: 50000
  #   # s3RequestTimeout (optional): Max time (in milliseconds) for a request (0 by default, disabled)
  #   s3RequestTimeout: 0
  #   # s3ClientExecutionTimeout (optional): Max time (in milliseconds) for a request by java client (0 by default, disabled)
  #   s3ClientExecutionTimeout: 0
  #   # Offer log compaction
  #   offer_log_compaction:
  #     ## Expiration, here offer logs 21 days old will be compacted
  #     expiration_value: 21
  #     ## Choose one of "MILLENNIA", "HALF_DAYS", "MILLIS", "FOREVER", "MICROS", "CENTURIES", "DECADES", "YEARS", "DAYS", "SECONDS", "HOURS", "MONTHS", "WEEKS", "NANOS", "MINUTES", "ERAS"
  #     expiration_unit: "DAYS"
  #     ## Compaction bulk size here 10 000 offers logs (at most) will be compacted (Expected value between 1 000 and 200 000)
  #     compaction_size: 10000
  #   # Batch processing thread pool size
  #   maxBatchThreadPoolSize: 32
  #   # Batch metadata computation timeout in seconds
  #   batchMetadataComputationTimeout: 600

  # example_swift_v1:
  #    provider: openstack-swift
  #    swiftKeystoneAuthUrl: https://keystone/auth/1.0
  #    swiftDomain: domain
  #    swiftUser: user
  #    swiftPassword: has to be set in vault-vitam.yml (encrypted) with same structure => DO NOT COMMENT OUT
  # THIS PART IS ONLY FOR CLEANING (and mandatory for this use case)
  #    swiftProjectId: related to OS_PROJECT_ID
  #    swiftRegionName: related to OS_REGION_NAME
  #    swiftInterface: related to OS_INTERFACE
  # example_swift_v3:
  #    provider: openstack-swift-v3
  #    swiftKeystoneAuthUrl: https://keystone/v3
  #    swiftDomain: domaine
  #    swiftUser: user
  #    swiftPassword: has to be set in vault-vitam.yml (encrypted) with same structure => DO NOT COMMENT OUT
  #    swiftProjectName: monTenant
  #    projectName: monTenant
  # THIS PART IS ONLY FOR CLEANING (and mandatory for this use case)
  #    swiftProjectId: related to OS_PROJECT_ID
  #    swiftRegionName: related to OS_REGION_NAME
  #    swiftInterface: related to OS_INTERFACE

  # swiftTrustStore: /chemin_vers_mon_fichier/monSwiftTrustStore.jks
  # swiftMaxConnectionsPerRoute: 200
  # swiftMaxConnections: 1000
  # swiftConnectionTimeout: 200000
  # swiftReadTimeout: 60000
  # Time (in seconds) to renew a token before expiration occurs
  # swiftHardRenewTokenDelayBeforeExpireTime: 60
  # swiftSoftRenewTokenDelayBeforeExpireTime: 300
