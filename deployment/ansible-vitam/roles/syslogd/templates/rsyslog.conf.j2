# FixedArray => allocation au démarrage, taille 10.000 max
# LinkedList => allocation dynamique, gère bien les "pics" de messages
# cf https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/System_Administrators_Guide/s1-working_with_queues_in_rsyslog.html
# $ActionQueueType LinkedList
# $ActionQueueFileName logstashQueue
# $ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)
# $ActionQueueSaveOnShutdown on # save messages to disk on shutdown
# $ActionResumeRetryCount -1    # infinite retries if host is down
# Taille moyenne d'1 msg en mémoire, compter 512 octets
# cf http://www.rsyslog.com/doc/v8-stable/concepts/queues.html
# $ActionQueueHighWatermark 100000 # Ecriture sur le disque à partir de 100.000 messages en memoire dans la queue
# $ActionQueueLowWatermark 10000 # Une fois qu'il n'y a plus que 10.000 messages dans la file, on arrete d'utiliser le disque
{% if external_siem is defined %}
$ModLoad imudp
$UDPServerRun 514

$ActionQueueType LinkedList
$ActionQueueFileName logstash-vitam-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "vitam" @@{{ external_siem.host }}:{{ external_siem.port }}
& stop

$ActionQueueType LinkedList
$ActionQueueFileName logstash-mongo-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "mongo" @@{{ external_siem.host }}:{{ external_siem.port }}
& stop

$ActionQueueType LinkedList
$ActionQueueFileName logstash-vitam_accesslog-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "vitam_accesslog" @@{{ external_siem.host }}:{{ external_siem.port }}
& stop

$ActionQueueType LinkedList
$ActionQueueFileName logstash-elasticsearch_log-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "elasticsearch-log" @@{{ external_siem.host }}:{{ external_siem.port }}
& stop

$ActionQueueType LinkedList
$ActionQueueFileName logstash-elasticsearch_data-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "elasticsearch-data" @@{{ external_siem.host }}:{{ external_siem.port }}
& stop

$ActionQueueType LinkedList
$ActionQueueFileName logstash-vitam_consul-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "consul" @@{{ external_siem.host }}:{{ external_siem.port }}
& stop

$ActionQueueType LinkedList
$ActionQueueFileName logstash-clamav-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "clam"  @@{{ external_siem.host }}:{{ external_siem.port }}
& stop

$ActionQueueType LinkedList
$ActionQueueFileName logstash-curator-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "curator"  @@{{ external_siem.host }}:{{ external_siem.port }}
& stop
{% elif (groups['hosts_logstash']|length) > 0 %}
$ModLoad imudp
$UDPServerRun 514

$ActionQueueType LinkedList
$ActionQueueFileName logstash-vitam-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "vitam" @@{{ logstash.host }}:{{ logstash.port }}
& stop

$ActionQueueType LinkedList
$ActionQueueFileName logstash-mongo-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "mongo" @@{{ logstash.host }}:{{ logstash.port }}
& stop

$ActionQueueType LinkedList
$ActionQueueFileName logstash-vitam_accesslog-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "vitam_accesslog" @@{{ logstash.host }}:{{ logstash.port }}
& stop

$ActionQueueType LinkedList
$ActionQueueFileName logstash-elasticsearch_log-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "elasticsearch-log" @@{{ logstash.host }}:{{ logstash.port }}
& stop

$ActionQueueType LinkedList
$ActionQueueFileName logstash-elasticsearch_data-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "elasticsearch-data" @@{{ logstash.host }}:{{ logstash.port }}
& stop

$ActionQueueType LinkedList
$ActionQueueFileName logstash-vitam_consul-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "consul" @@{{ logstash.host }}:{{ logstash.port }}
& stop

$ActionQueueType LinkedList
$ActionQueueFileName logstash-clamav-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "clam"  @@{{ logstash.host }}:{{ logstash.port }}
& stop

$ActionQueueType LinkedList
$ActionQueueFileName logstash-curator-queue
$ActionQueueMaxDiskSpace 1g
$ActionQueueSaveOnShutdown on
$ActionResumeRetryCount -1
$ActionQueueHighWatermark 100000
$ActionQueueLowWatermark 10000
:programname, startswith, "curator"  @@{{ logstash.host }}:{{ logstash.port }}
& stop

{% endif %}
