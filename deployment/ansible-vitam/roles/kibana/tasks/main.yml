---

#### Kibana installation ####
- name: Install vitam-kibana package from repo
  package:
    name: vitam-kibana
    state: latest
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"
  notify:
    - "kibana - restart service"

- name: Kibana configuration by templating
  template:
    src: kibana.yml.j2
    dest: /etc/kibana/kibana.yml
    owner: root
    group: root
    mode: 0644
  notify:
    - "kibana - restart service"

- name: Ensure Kibana log dir is OK
  file:
    path: "{{ vitam_defaults.folder.root_path }}/log/kibana/"
    state: directory
    owner: "kibana"
    group: "kibana"
    mode: "{{ vitam_defaults.folder.folder_permission }}"

- name: Enable logrotate for Kibana
  template:
    src: logrotate.j2
    dest: /etc/logrotate.d/kibana
    owner: root
    group: root
    mode: 0644
  when: kibana.logrotate | default('enabled') | lower == 'enabled'

- name: Disable logrotate for Kibana
  file:
    path: /etc/logrotate.d/kibana
    state: absent
  when: kibana.logrotate | default('enabled') | lower == 'disabled'

#### Consul configuration ####
- name: Ensure consul config dir is OK
  file:
    path: "{{ consul_folder_conf }}"
    state: directory
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"

- name: Deploy consul agent service declaration
  template:
    src: "service-kibana.json.j2"
    dest: "{{ consul_folder_conf }}/service-{{ kibana_service_name }}.json"
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"
  tags:
    - consul_conf
  notify:
    - "kibana - reload consul configuration"

- meta: flush_handlers

- name: Make sure kibana is started & at boot
  systemd:
    name: kibana
    enabled: "{{ composant.at_boot | default(service_at_boot) }}"
    state: started

- name: Check kibana service health in local consul agent
  uri:
    url: "http://{{ (inventory_hostname in groups['hosts_consul_server']) | ternary(hostvars[inventory_hostname]['ip_admin'], '127.0.0.1') }}:8500/v1/agent/health/service/name/{{ kibana_service_name }}"
  register: result
  until:
    - result.status is defined
    - result.status == 200
  retries: "{{ vitam_defaults.services.status_retries_number }}"
  delay: "{{ vitam_defaults.services.status_retries_delay }}"
