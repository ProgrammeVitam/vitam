---

#### Kibana installation ####
- name: Set command for CentOS
  set_fact:
    check_kibana_version: "rpm -q kibana"
  when: ansible_os_family == "RedHat"

- name: Set command for Debian
  set_fact:
    check_kibana_version: "dpkg-query -l  'kibana'"
  when: ansible_os_family == "Debian"

- name: checking whether kibana is already installed
  shell : "{{ check_kibana_version }}"
  register: is_installed
  ignore_errors: true
# OMA: ignore_errors beurk

- import_tasks: migrate_kibana_5.yml
  when: is_installed.stdout.find('5.6.') != -1

- name: Install vitam-kibana package from repo
  package:
    name: vitam-kibana
    state: latest
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"
  notify:
    - restart kibana

- name: Add kibana autostart at boot
  systemd:
    name: kibana
    daemon_reload: yes
    enabled: yes
  notify:
    - restart kibana

- name: Kibana configuration by templating
  template:
    src: kibana.yml.j2
    dest: /etc/kibana/kibana.yml
    owner: root
    group: root
    mode: 0644
  notify:
    - restart kibana

- name: Ensure Kibana log dir is OK
  file:
    path: "{{ vitam_defaults.folder.root_path }}/log/kibana/"
    state: directory
    owner: "kibana"
    group: "kibana"
    mode: "{{ vitam_defaults.folder.folder_permission }}"

- name: Enable logrotate for Kibana
  template:
    src: logrotate.j2
    dest: /etc/logrotate.d/kibana
    owner: root
    group: root
    mode: 0644
  when: kibana.logrotate | default('enabled') | lower == 'enabled'

- name: Disable logrotate for Kibana
  file:
    path: /etc/logrotate.d/kibana
    state: absent
  when: kibana.logrotate | default('enabled') | lower == 'disabled'

- name: flush_handlers
  meta: flush_handlers

- name: Make sure kibana is started
  systemd:
    name: kibana
    state: started

#### Consul configuration ####
- name: Ensure consul config dir is OK
  file:
    path: "{{ consul_folder_conf }}"
    state: directory
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"

- name: Deploy consul agent service declaration
  template:
    src: "service-kibana.json.j2"
    dest: "{{ consul_folder_conf }}/service-{{ kibana_service_name }}.json"
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"
  tags:
    - consul_conf
  notify:
   - reload consul configuration
