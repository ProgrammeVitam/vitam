---

- name: Get the names of the offers present in vitam_strategy
  set_fact:
    vitam_strategy_offers_names: "{{ vitam_strategy_offers_names + [item.name] }}"
  loop: "{{ vitam_strategy }}"
  when: (item.status is not defined) or (item.status != "INACTIVE")
  tags:
    - update_vitam_configuration

- name: Get the offers present in other_strategy but not in vitam_strategy
  set_fact:
    other_strategy_offers_list: "{{ (other_strategy_offers_list + [item]) | unique }}"
  loop: "{{ other_strategies | default({}) | dict2items | sum(attribute='value', start=[]) }}"
  when: (item.name not in vitam_strategy_offers_names) and (((item.status is not defined) or (item.status != "INACTIVE")))
  tags:
    - update_vitam_configuration

- name: Compute all offers (with offer configuration from vitam_offer by default)
  set_fact:
    all_used_offers: "{{ vitam_strategy + other_strategy_offers_list }}"
  tags:
    - update_vitam_configuration

- name: Ensure that the jobs sub-directory exists
  file:
    path: "{{ vitam_folder_conf }}/jobs"
    state: directory
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.folder_permission }}"
  tags:
    - update_vitam_configuration
  notify:
    - "vitam - restart service"

- name: Deploy configuration files in jobs subdir
  template:
    src: "{{ item }}"
    dest: "{{ vitam_folder_conf }}/jobs/{{ item | basename | regex_replace('\\.j2$') }}"
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"
  with_fileglob:
    - "{{ role_path }}/templates/{{ vitam_struct.vitam_component }}/jobs/*"
  tags:
    - update_vitam_configuration
  notify:
    - "vitam - restart service"