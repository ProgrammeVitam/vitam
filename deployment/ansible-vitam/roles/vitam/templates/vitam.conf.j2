secret : {{ plateforme_secret }}
filterActivation : {{ vitam_struct.secret_platform }}
{% if vitam_struct.vitam_component == vitam.processing.vitam_component %}
distributeurBatchSize: 800
workerBulkSize: 16
{% endif %}
{% if vitam_struct.vitam_component == vitam.metadata.vitam_component %}
storeGraphElementsPerFile: 10000
storeGraphOverlapDelay: 300
expireCacheEntriesDelay: 300
deleteIncompleteReconstructedUnitDelay: 2592000
migrationBulkSize: 10000
workspaceFreespaceThreshold: {{ vitam.metadata.workspaceFreespaceThreshold | default(25) }}
{% endif %}
distributionThreshold : 100000
eliminationAnalysisThreshold : 100000
eliminationActionThreshold : 10000
computedInheritedRulesThreshold : 100000000
intervalDelayCheckIdle : 5000
maxDelayUnusedConnection : 5000
delayValidationAfterInactivity : 2500
tenants: [ "{{ vitam_tenant_ids | join('", "') }}" ]
adminTenant : {{ vitam_tenant_admin | default(1) }}
forceChunkModeInputStream : {{ vitam_defaults.vitam_force_chunk_mode | default(false) }}

{% if vitam_struct.vitam_component == vitam.worker.vitam_component %}
reclassificationMaxBulkThreshold: 1000
reclassificationMaxUnitsThreshold: 10000
reclassificationMaxGuildListSizeInLogbookOperation: 1000
queriesThreshold: {{ vitam.worker.queriesThreshold | default(100000) }}
bulkAtomicUpdateBatchSize: {{ vitam.worker.bulkAtomicUpdateBatchSize | default(100) }}
bulkAtomicUpdateThreadPoolSize: {{ vitam.worker.bulkAtomicUpdateThreadPoolSize | default(8) }}
bulkAtomicUpdateThreadPoolQueueSize: {{ vitam.worker.bulkAtomicUpdateThreadPoolQueueSize | default(16) }}

binarySizePlatformThreshold: # 1 Go
 limit: {{ vitam.worker.binarySizePlatformThreshold | default(1) }}
 sizeUnit: {{ vitam.worker.binarySizePlatformThresholdSizeUnit | default('GIGABYTE') }}

binarySizeTenantThreshold: # exemple for tenant 0 max dip/transfer size is 20 Mo, true means can exceed tenant threshold.
#  - tenant: 0
#    limit: 20
#    sizeUnit: MEGABYTE
#    authorize: true

eliminationReportExtraFields:
{% for tenant_id in vitam_tenant_ids %}
  - tenant: {{ tenant_id }}
    metadataFields: {{ extendedConfiguration.custom[tenant_id].eliminationReportExtraFields | default(default_eliminationReportExtraFields) | to_json }}
{% endfor %}
{% endif %}

keywordMaxLength: {{ vitam_defaults.keywordMaxLength | default(32766) }}
textMaxLength: {{ vitam_defaults.textMaxLength | default(32766) }}

classificationLevel :
  allowList : [{% for classification in classificationList %}{{ classification }}{% if not loop.last %},{% endif %}{% endfor %}]
  authorizeNotDefined: {{ classificationLevelOptional }}

indexInheritedRulesWithAPIV2OutputByTenant: [ "{{ vitam.worker.api_output_index_tenants | join('", "') }}" ]
indexInheritedRulesWithRulesIdByTenant: [ "{{ vitam.worker.rules_index_tenants | join('", "') }}" ]

environmentName: {{ vitam_prefix_offer|default(vitam_site_name) }}

acceptableRequestTime: {{ acceptableRequestTime|default(10) }}
criticalRequestTime: {{ criticalRequestTime|default(60) }}
requestTimeAlertThrottlingDelay: {{ requestTimeAlertThrottlingDelay|default(60) }}

# Ontology cache settings (max entries in cache & retention timeout in seconds)
ontologyCacheMaxEntries: {{ vitam_defaults.ontologyCacheMaxEntries | default(100) }}
ontologyCacheTimeoutInSeconds: {{ vitam_defaults.ontologyCacheTimeoutInSeconds | default(300) }}

# Elasticsearch scroll timeout settings
elasticSearchScrollTimeoutInMilliseconds: {{ vitam_defaults.elasticSearchScrollTimeoutInMilliseconds | default(300000) }}

{% if vitam_struct.vitam_component == vitam.processing.vitam_component %}
processEngineWaitForStepTimeout: 172800
{% endif %}

restoreBulkSize: {{ restoreBulkSize | default(10000) }}
