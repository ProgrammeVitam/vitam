<?xml version="1.0" encoding="UTF-8"?>
<job-scheduling-data xmlns="http://www.quartz-scheduler.org/xml/JobSchedulingData" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.quartz-scheduler.org/xml/JobSchedulingData https://www.quartz-scheduler.org/xml/job_scheduling_data_1_8.xsd" version="1.8">

    <processing-directives>
        <!-- if there are any jobs/trigger in scheduler of same name (as in this
            file), overwrite them -->
        <overwrite-existing-data>true</overwrite-existing-data>
        <!-- if there are any jobs/trigger in scheduler of same name (as in this
            file), and over-write is false, ignore them rather then generating an error -->
        <ignore-duplicates>true</ignore-duplicates>
    </processing-directives>

{% if primary_site | lower == "true" %}
    <schedule>
        <job>
            <name>StorageLogTraceabilityJob</name>
            <group>Storage</group>
            <description>Job for StorageLog Traceability</description>
            <job-class>fr.gouv.vitam.scheduler.server.job.StorageLogTraceabilityJob</job-class>
        </job>

        <trigger>
            <cron>
                <name>StorageLogTraceabilityTrigger</name>
                <group>Storage</group>
                <job-name>StorageLogTraceabilityJob</job-name>
                <job-group>Storage</job-group>
                <cron-expression>{{ vitam_timers.storage.frequency_traceability_log | default('0 40 0/4 * * ?') }}</cron-expression>
            </cron>
        </trigger>

        <job>
            <name>StorageBackupLogJob</name>
            <group>storage</group>
            <description>Job for StorageLog backup</description>
            <job-class>fr.gouv.vitam.scheduler.server.job.StorageBackupLogJob</job-class>
        </job>


        <trigger>
            <cron>
                <name>StorageBackupAccessLogTrigger</name>
                <group>storage</group>
                <job-name>StorageBackupLogJob</job-name>
                <job-group>storage</job-group>
                <job-data-map>
                    <entry>
                        <key>StorageBackupType</key>
                        <value>AccessLog</value>
                    </entry>
                    <entry>
                        <key>StorageServerHosts</key>
                        <value>{% for item in groups['hosts_storage_engine'] %}{{vitam.storageengine.vitam_component}}-{{loop.index}}.{{vitam.storageengine.vitam_component}}.service.{{ consul_domain }}:{{vitam.storageengine.port_service}}{% if not loop.last %};{% endif %}{% endfor %}</value>
                    </entry>
                </job-data-map>
                <cron-expression>{{ vitam_timers.storage.vitam_storage_accesslog_backup | default('0 10 0/4 * * ?') }}</cron-expression>
            </cron>
        </trigger>

        <trigger>
            <cron>
                <name>StorageBackupWriteLogTrigger</name>
                <group>storage</group>
                <job-name>StorageBackupLogJob</job-name>
                <job-group>storage</job-group>
                <job-data-map>
                    <entry>
                        <key>StorageBackupType</key>
                        <value>WriteLog</value>
                    </entry>
                    <entry>
                        <key>StorageServerHosts</key>
                        <value>{% for item in groups['hosts_storage_engine'] %}{{vitam.storageengine.vitam_component}}-{{loop.index}}.{{vitam.storageengine.vitam_component}}.service.{{ consul_domain }}:{{vitam.storageengine.port_service}}{% if not loop.last %};{% endif %}{% endfor %}</value>
                    </entry>
                </job-data-map>
                <cron-expression>{{ vitam_timers.storage.vitam_storage_log_backup | default('0 15 0/4 * * ?') }}</cron-expression>
            </cron>
        </trigger>

    </schedule>
{% endif %}

</job-scheduling-data>
