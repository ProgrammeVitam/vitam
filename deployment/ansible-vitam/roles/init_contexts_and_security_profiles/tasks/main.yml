
---

- name: "Wait until service functional-admin is up"
  wait_for:
      host: "{{ hostvars[groups['hosts_functional_administration'][0]]['ip_admin'] }}"
      port: "{{ vitam.functional_administration.port_admin }}"
      state: "started"
      timeout: "{{ vitam_defaults.services.start_timeout }}"
  run_once: true

- import_tasks: check_elasticsearch.yml

- name: Check if security profile already exists in functional-admin
  uri:
    method: GET
    body: "{ \"$query\":{\"$eq\":{\"Identifier\":\"{{ admin_security_profile }}\"}},\"$filter\":{},\"$projection\":{} }"
    status_code: 200
    url: "http://{{ hostvars[groups['hosts_functional_administration'][0]]['ip_admin'] }}:{{ vitam.functional_administration.port_admin }}/v1/admin/securityprofiles"
    body_format: "json"
  run_once: true
  register: securityprofile_check

- name: Modify json & convert to dict...
  set_fact:
    securityprofile_check_json: "{{ securityprofile_check.json |regex_replace('\\$hits', 'hits')|regex_replace('\\$results', 'results')|regex_replace('\\#id', 'id')  }}"
  run_once: true

- import_tasks: delete_certificates_contexts_security_profile.yml
  when: delete_security_profiles is defined and delete_security_profiles|bool == true

- import_tasks: "init_security_profiles.yml"
  when: (securityprofile_check_json.hits.total == 0) or
        (delete_security_profiles is defined and delete_security_profiles|bool == true)

- import_tasks: "init_context_and_certificates.yml"
  when: (securityprofile_check_json.hits.total == 0) or
        (delete_security_profiles is defined and delete_security_profiles|bool == true)

- import_tasks: "init_ontologies.yml"
