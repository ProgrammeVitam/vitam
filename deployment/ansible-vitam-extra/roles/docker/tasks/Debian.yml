---

- name: Delete docker package (obsolete & conflict with docker-ce)
  package:
    name: "docker"
    state: absent
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"

- name: Make sure curl is installed
  apt:
    name: curl
    state: present
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"

- name: add GPG docker repo key
  shell: "curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -"
  environment:
    https_proxy: "{{ http_proxy_environnement }}"
    http_proxy:  "{{ http_proxy_environnement }}"

- name: install apt-transport-https as Docker repository is https
  package:
    name: apt-transport-https
    state: present
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"

- name: check docker repo are present
  apt_repository:
    repo: "{{ item }}"
    state: present
  loop:
    - "deb [arch=amd64] https://download.docker.com/linux/debian  {{ ansible_distribution_release }} stable"

- name: run apt-update
  apt:
    update_cache: yes
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"

- name: installer docker & pip
  apt:
    name: ['docker-ce','python-pip']
    state: latest
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"

- name: upgrade pip & install docker python package
  pip:
    name: ['pip','docker']
    state: latest
  environment:
    http_proxy: "{{ http_proxy_environnement }}"
    https_proxy: "{{ http_proxy_environnement }}"
  when: http_proxy_environnement is defined and http_proxy_environnement != ""

- name: upgrade pip & install docker python package
  pip:
    name: ['pip','docker']
    state: latest
  when: http_proxy_environnement is not defined or http_proxy_environnement == ""

- name: install python-backports.ssl-match-hostname
  apt:
    name: "python-backports.ssl-match-hostname"
    state: latest
  register: result
  retries: "{{ packages_install_retries_number }}"
  until: result is succeeded
  delay: "{{ packages_install_retries_delay }}"
