---

- name: Get {{ component_name }} state
  uri:
    url: "http://{{ vitam_struct.host }}:{{ vitam_struct.port_http }}/_cluster/health?format=json"
    return_content: true
  register: ES_state
  run_once: true

- name: save current state in {{ inventory_dir }}
  copy:
    content: "{{ ES_state }}"
    dest: "{{ inventory_dir }}/troubleshoot/{{ component_name }}.json"
  run_once: true
  delegate_to: localhost

- name: Get indices state
  uri:
    url: "http://{{ vitam_struct.host }}:{{ vitam_struct.port_http }}/_cat/indices?v&s=index&format=json"
    return_content: true
  register: indices_state
  run_once: true

- name: save current indices state in {{ inventory_dir }}
  copy:
    content: "{{ indices_state.json }}"
    dest: "{{ inventory_dir }}/troubleshoot/{{ component_name }}_indices.json"
  run_once: true
  delegate_to: localhost

- name: Get aliases state
  uri:
    url: "http://{{ vitam_struct.host }}:{{ vitam_struct.port_http }}/_cat/aliases?v&s=index&format=json"
    return_content: true
  register: aliases_state
  run_once: true

- name: save current aliases state in {{ inventory_dir }}
  copy:
    content: "{{ aliases_state.json }}"
    dest: "{{ inventory_dir }}/troubleshoot/{{ component_name }}_aliases.json"
  run_once: true
  delegate_to: localhost

- name: Get mappings state
  uri:
    url: "http://{{ vitam_struct.host }}:{{ vitam_struct.port_http }}/*/_mapping"
    return_content: true
  register: mapping_state
  run_once: true

- name: save current mappings state in {{ inventory_dir }}
  copy:
    content: "{{ mapping_state.json }}"
    dest: "{{ inventory_dir }}/troubleshoot/{{ component_name }}_mapping.json"
  run_once: true
  delegate_to: localhost

- name: Get stats state
  uri:
    url: "http://{{ vitam_struct.host }}:{{ vitam_struct.port_http }}/_stats"
    return_content: true
  register: stats_state
  run_once: true

- name: save current state in {{ inventory_dir }}
  copy:
    content: "{{ stats_state.json }}"
    dest: "{{ inventory_dir }}/troubleshoot/{{ component_name }}_stats.json"
  run_once: true
  delegate_to: localhost

- name: fetch configuration files from {{ component_name }}
  fetch:
    src: "{{ vitam_defaults.folder.root_path }}/conf/{{ component_name }}/{{ item }}"
    dest: "{{ inventory_dir }}/troubleshoot/{{ inventory_hostname }}/{{ component_name }}/"
    flat: yes
  with_items:
    - "log4j2.properties"
    - "jvm.options"
    - "sysconfig/elasticsearch"
    - "elasticsearch.yml"
