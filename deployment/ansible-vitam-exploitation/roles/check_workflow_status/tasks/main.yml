---

- name: wait for service to be up'n'running on business port
  wait_for:
    host: "{{ ip_service }}"
    port: "{{ vitam_struct.port_service }}"
    timeout: "{{ vitam_defaults.services.start_timeout }}"
  run_once: true

- name: create temporary PEM certificate
  local_action: shell openssl pkcs12 -in {{ inventory_dir }}/keystores/client-external/keystore_vitam-admin-int.p12 -out {{ inventory_dir }}/keystores/client-external/keystore_vitam-admin-int.pem -passin pass:{{ keystores.client_external.vitam_admin_int }} -passout pass:{{ keystores.client_external.vitam_admin_int }} -nodes
  no_log: "{{ hide_passwords_during_deploy }}"
  vars:
     ansible_become: no

- name: copy temporary PEM certificate
  copy:
    src: "{{ inventory_dir }}/keystores/client-external/keystore_vitam-admin-int.pem"
    dest: "{{ vitam_defaults.folder.root_path }}/tmp/access-external/keystore_vitam-admin-int.pem"
    remote_src: no
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"

- name: get workflow status
  uri:
    url: "{% if vitam_struct.https_enabled == true %}https{% else %}http{% endif %}://{{ ip_service }}:{{ vitam.accessexternal.port_service }}/admin-external/v1/operations"
    method: "GET"
    validate_certs: no
    client_cert: "{{ vitam_defaults.folder.root_path }}/tmp/access-external/keystore_vitam-admin-int.pem"
    headers:
      X-Tenant-Id: "{{ item }}"
      Host: "{{ vitam_struct.host }}"
    body_format: "json"
    body:
      states: "{{ states }}"
      statuses: "{{ statuses }}"
    return_content: yes
  register: workflow_status
  loop: "{{ vitam_tenant_ids }}"
  run_once: true

- name: remove temporary copied PEM certificate
  file:
    path: "{{ vitam_defaults.folder.root_path }}/tmp/access-external/keystore_vitam-admin-int.pem"
    state: absent

- name: remove temporary local PEM certificate
  local_action:
    module: file
    path: "{{ inventory_dir }}/keystores/client-external/keystore_vitam-admin-int.pem"
    state: absent

- name: Cleanup registered variable
  set_fact:
    workflow_status: "{{ workflow_status | replace('$', '_') }}"

- name: "Generate workflow status report under {{ inventory_dir }}/workflow_status.md"
  local_action:
    module: template
    src: "workflow_status.md.j2"
    dest: "{{ inventory_dir }}/workflow_status.md"
