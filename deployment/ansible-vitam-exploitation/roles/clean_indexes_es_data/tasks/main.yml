---

- name: Ensure Elasticsearch data cluster is in "green" state
  # command: "curl -I --silent -k -H \"Accept: application/json\"  http://{{ elasticsearch.data.host }}:{{ elasticsearch.data.port_http }}/{{ elasticsearch.data.baseuri }}/_cluster/health"
  uri:
    method: GET
    url: "http://{{ elasticsearch.data.host }}:{{ elasticsearch.data.port_http }}/_cluster/health"
  register: result
  until:
    - result.json is defined
    - result.json.status == "green"
  retries: "{{ vitam_defaults.services.api_call_timeout }}"
  delay: 10

- set_fact:
    list_es_indexes: []

- name: Get list indexes from es data
  uri:
    url: "http://{{ elasticsearch.data.host }}:{{  elasticsearch.data.port_http }}/_cat/indices?v"
    method: GET
    return_content: yes
  register: es_result

- set_fact:
    array: "{{ es_result.content.split('\n') }}"

- debug:
    var: array

- set_fact:
    list_es_indexes: "{{ list_es_indexes + [item.split()[2]] }}"
  with_items: "{{ array }}"
  when: item.split()[2] is defined and item.split()[2] != 'index'

- name: clean ES data
  uri:
    url: "http://{{ elasticsearch.data.host }}:{{  elasticsearch.data.port_http }}/{{ item }}"
    method: DELETE
  with_items:
  - "{{ list_es_indexes }}"
