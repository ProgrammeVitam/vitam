---
- fail:
    msg: "No access contract defined in extra vars !"
  when: access_contract is undefined or access_contract ==''

- fail:
    msg: "No tenantId defined in extra vars !"
  when: tenantId is undefined or tenantId ==''

- fail:
    msg: "No operationIds defined in extra vars !"
  when: operationIds is undefined or operationIds ==''

- fail:
    msg: "Invalid operationIds. Expected comma-separated guids, without spacing (eg. guid1,guid2,...guidN)"
  when: operationIds | regex_search('^[^a-z0-9]+(,[^a-z0-9]+)*$')

- name: create temporary pem file to check workflows status
  local_action: shell openssl pkcs12 -in {{ inventory_dir }}/keystores/client-external/keystore_vitam-admin-int.p12 -out {{ inventory_dir }}/keystores/client-external/keystore_vitam-admin-int.pem -passin pass:{{ keystores.client_external.vitam_admin_int }} -passout pass:{{ keystores.client_external.vitam_admin_int }} -nodes
  no_log: "{{ hide_passwords_during_deploy }}"
  vars:
     ansible_become: no

- name: copy temporary PEM certificate
  copy:
    src: "{{ inventory_dir }}/keystores/client-external/keystore_vitam-admin-int.pem"
    dest: "{{ vitam_defaults.folder.root_path }}/tmp/access-external/keystore_vitam-admin-int.pem"
    remote_src: no
    owner: "{{ vitam_defaults.users.vitam }}"
    group: "{{ vitam_defaults.users.group }}"
    mode: "{{ vitam_defaults.folder.conf_permission }}"

- name: Ensure service is started
  service:
    name: "vitam-access-external"
    state: started

- name: wait for service to be up'n'running on business port
  wait_for:
    host: "{{ ip_service }}"
    port: "{{ vitam_struct.port_service }}"
    timeout: "{{ vitam_defaults.services.start_timeout }}"
  run_once: true

# curl -X POST --key /tmp/ihm-demo.key --cert /tmp/ihm-demo.crt https://<IP_access-external>:8443/admin-external/v1/evidenceaudit/ -H 'Content-Type: application/json' -H 'X-Access-Contract-Id: FRAN_CA_0001' -H 'X-Tenant-Id: 2' -d '{ "$query": [ { "$eq": { "#opi": { "$in": [ "aeeaaaaaaceovfizabpzmalx7wtwsaaaaaaq", "aeeaaaaaaceovfizabpzmalx7yf5pwqaaaaq" ] } } ], "$projection": {} }'

- name: Prepare audit DSL Query
  set_fact:
    dsl_query: "{ \"$query\": [ { \"$in\": { \"#opi\": [\"{{ operationIds | regex_replace(',', '\",\"')}}\"] } } ], \"$projection\": {} }"
  run_once: true

- name: launch "audit coherence" for tenants
  uri:
    url: "{% if vitam_struct.https_enabled == true %}https{% else %}http{% endif %}://{{ ip_service }}:{{ vitam.accessexternal.port_service }}/admin-external/v1/evidenceaudit"
    method: "POST"
    validate_certs: no
    client_cert: "{{ vitam_defaults.folder.root_path }}/tmp/access-external/keystore_vitam-admin-int.pem"
    headers:
      X-Tenant-Id: "{{ tenantId }}"
      Host: "{{ vitam_struct.host }}"
      X-Access-Contract-Id: "{{ access_contract }}"
    body_format: "json"
    body: "{{ dsl_query }}"
    return_content: yes
  run_once: true

- name: remove temporary PEM certificate
  file:
    path: "{{ vitam_defaults.folder.root_path }}/tmp/access-external/keystore_vitam-admin-int.pem"
    state: absent

- name: remove temporary pem file in ansible
  local_action:
    module: file
    path:  "{{ inventory_dir }}/keystores/client-external/keystore_vitam-admin-int.pem"
    state: absent
