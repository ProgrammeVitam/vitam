---

### consul servers
- hosts: hosts_consul_server
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "consul"
    hote: "{{ ip_admin }}"
    check_port: "8500"
  gather_facts: no

 ### consul agents
- hosts: vitam
  any_errors_fatal: false
  roles:
    - { role: vitam_check_port, when: consul_disabled is not defined or consul_disabled |lower != 'true' }
  vars:
    vitam_component: "consul"
    hote: "{{ hostvars[inventory_hostname][consul.network] }}"
    check_port: "8301"
  gather_facts: no

### ES data
- hosts: hosts_elasticsearch_data
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "elasticsearch-data"
    hote: "{{ ip_service }}"
    check_port: "{{ elasticsearch.data.port_http }}"
  gather_facts: no

### ES log
- hosts: hosts_elasticsearch_log
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "elasticsearch-log"
    hote: "{{ ip_admin }}"
    check_port: "{{ elasticsearch.log.port_http }}"
  gather_facts: no

### mongoDB data
- hosts: hosts_mongoc_data
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "mongoc"
    hote: "{{ ip_service }}"
    check_port: "{{ mongodb.mongoc_port }}"
  gather_facts: no

- hosts: hosts_mongod_data
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "mongod"
    hote: "{{ ip_service }}"
    check_port: "{{ mongodb.mongod_port }}"
  gather_facts: no

- hosts: hosts_mongos_data
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "mongos"
    hote: "{{ ip_service }}"
    check_port: "{{ mongodb.mongos_port }}"
  gather_facts: no

### mongoDB offer
- hosts: hosts_mongoc_offer
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "mongoc"
    hote: "{{ ip_service }}"
    check_port: "{{ mongodb.mongoc_port }}"
  gather_facts: no

- hosts: hosts_mongod_offer
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "mongod"
    hote: "{{ ip_service }}"
    check_port: "{{ mongodb.mongod_port }}"
  gather_facts: no

- hosts: hosts_mongos_offer
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "mongos"
    hote: "{{ ip_service }}"
    check_port: "{{ mongodb.mongos_port }}"
  gather_facts: no

### offer
- hosts: hosts_storage_offer_default
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.storageofferdefault.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.storageofferdefault.port_admin }}"
    check_port_service: "{{ vitam.storageofferdefault.port_service }}"
  gather_facts: no

### storage engine
- hosts: hosts_storage_engine
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.storageengine.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.storageengine.port_admin }}"
    check_port_service: "{{ vitam.storageengine.port_service }}"
  gather_facts: no

### metadata
- hosts: hosts_metadata
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.metadata.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.metadata.port_admin }}"
    check_port_service: "{{ vitam.metadata.port_service }}"
  gather_facts: no

### logbook
- hosts: hosts_logbook
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.logbook.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.logbook.port_admin }}"
    check_port_service: "{{ vitam.logbook.port_service }}"
  gather_facts: no

### workspace
- hosts: hosts_workspace
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.workspace.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.workspace.port_admin }}"
    check_port_service: "{{ vitam.workspace.port_service }}"
  gather_facts: no

### functional administration
- hosts: hosts_functional_administration
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.functional_administration.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.functional_administration.port_admin }}"
    check_port_service: "{{ vitam.functional_administration.port_service }}"
  gather_facts: no

### security internal
- hosts: hosts_security_internal
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.security_internal.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.security_internal.port_admin }}"
    check_port_service: "{{ vitam.security_internal.port_service }}"
  gather_facts: no

### processing
- hosts: hosts_processing
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.processing.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.processing.port_admin }}"
    check_port_service: "{{ vitam.processing.port_service }}"
  gather_facts: no

### batch report
- hosts: hosts_batch_report
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.batchreport.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.batchreport.port_admin }}"
    check_port_service: "{{ vitam.batchreport.port_service }}"
  gather_facts: no

### worker
- hosts: hosts_worker
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.worker.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.worker.port_admin }}"
    check_port_service: "{{ vitam.worker.port_service }}"
  gather_facts: no

- hosts: hosts_worker
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "siegfried"
    hote: "localhost"
    check_port: "{{ siegfried.port }}"
  gather_facts: no

- import_playbook: status_vitam_collect.yml

### access-internal
- hosts: hosts_access_internal
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.accessinternal.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.accessinternal.port_admin }}"
    check_port_service: "{{ vitam.accessinternal.port_service }}"
  gather_facts: no

### access-external
- hosts: hosts_access_external
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.accessexternal.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.accessexternal.port_admin }}"
    check_port_service: "{{ vitam.accessexternal.port_service }}"
  gather_facts: no

### Ingest-internal
- hosts: hosts_ingest_internal
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.ingestinternal.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.ingestinternal.port_admin }}"
    check_port_service: "{{ vitam.ingestinternal.port_service }}"
  gather_facts: no

### Ingest-external
- hosts: hosts_ingest_external
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.ingestexternal.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.ingestexternal.port_admin }}"
    check_port_service: "{{ vitam.ingestexternal.port_service }}"
  gather_facts: no

- hosts: hosts_ingest_external
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "siegfried"
    hote: "localhost"
    check_port: "{{ siegfried.port }}"
  gather_facts: no

### scheduler
- hosts: hosts_scheduler
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.scheduler.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.scheduler.port_admin }}"
    check_port_service: "{{ vitam.scheduler.port_service }}"
  gather_facts: no

### ihm-demo
- hosts: hosts_ihm_demo
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.ihm_demo.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.ihm_demo.port_admin }}"
    check_port_service: "{{ vitam.ihm_demo.port_service }}"
  gather_facts: no

### ihm-recette
- hosts: hosts_ihm_recette
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.ihm_recette.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.ihm_recette.port_admin }}"
    check_port_service: "{{ vitam.ihm_recette.port_service }}"
  gather_facts: no

### library
- hosts: hosts_library
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.library.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.library.port_admin }}"
    check_port_service: "{{ vitam.library.port_service }}"
  gather_facts: no


### Other checks

# cerebro
- hosts: hosts_cerebro
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "cerebro"
    hote: "{{ ip_admin }}"
    check_port: "{{ cerebro.port }}"
  gather_facts: no

### checks for components that SHOULD NOT BE on production environment

# elastic kibana interceptor
- hosts: hosts_kibana_data
  any_errors_fatal: false
  roles:
    - { role: vitam_autotest, when: ( primary_site | lower == "true" ) or ( vitam_component in vitam_secondary_site_components ) }
  vars:
    vitam_component: "{{ vitam.elastickibanainterceptor.vitam_component }}"
    hote: "{{ ip_admin }}"
    hote_service: "{{ ip_service }}"
    check_port: "{{ vitam.elastickibanainterceptor.port_admin }}"
    check_port_service: "{{ vitam.elastickibanainterceptor.port_service }}"
  gather_facts: no

# kibana data
- hosts: hosts_kibana_data
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "kibana (data)"
    hote: "{{ ip_admin }}"
    check_port: "{{ kibana.data.port }}"
  gather_facts: no

- hosts: hosts_kibana_log
  any_errors_fatal: false
  roles:
    - vitam_check_port
  vars:
    vitam_component: "kibana (log)"
    hote: "{{ ip_admin }}"
    check_port: "{{ kibana.log.port }}"
  gather_facts: no
