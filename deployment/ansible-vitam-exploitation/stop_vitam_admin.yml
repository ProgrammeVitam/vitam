---

- hosts: hosts_kibana_log
  gather_facts: no
  roles:
    - service
  vars:
    state: stopped
    name: kibana
    hote: "{{ ip_admin }}"
    port_check: "{{ kibana.log.port }}"
    timeout: "{{ vitam_defaults.services.stop_timeout }}"

- hosts: hosts_logstash
  gather_facts: no
  roles:
    - service
  vars:
    state: stopped
    name: logstash
    hote: "{{ ip_admin }}"
    port_check: "{{ logstash.port }}"
    timeout: "{{ vitam_defaults.services.stop_timeout }}"

- hosts: hosts_elasticsearch_log
  gather_facts: no
  roles:
    - service
  vars:
    state: stopped
    name: vitam-elasticsearch-log
    hote: "{{ ip_admin }}"
    port_check: "{{ elasticsearch.log.port_http }}"
    timeout: "{{ vitam_defaults.services.stop_timeout }}"

# Monitoring
- hosts: hosts_alertmanager
  gather_facts: no
  roles:
    - service
  vars:
    state: stopped
    name: vitam-alertmanager

- hosts: hosts_grafana
  gather_facts: no
  roles:
    - service
  vars:
    state: stopped
    name: grafana-server

- hosts: hosts_prometheus
  gather_facts: no
  roles:
    - service
  vars:
    state: stopped
    name: vitam-prometheus

- hosts: vitam
  gather_facts: no
  roles:
    - { role: service, when: "( prometheus.node_exporter.enabled == true )" }
  vars:
    state: stopped
    name: vitam-node-exporter

# consul stop
- hosts: vitam
  gather_facts: no
  roles:
    - { role: service, when: consul_disabled is not defined or consul_disabled |lower != 'true' }
  vars:
    state: stopped
    name: vitam-consul

- hosts: hosts_consul_server
  gather_facts: no
  roles:
    - service
  vars:
    state: stopped
    name: vitam-consul

- hosts: vitam
  gather_facts: no
  roles:
    - { role: service, when: "{{groups['hosts_elasticsearch_log'] | length > 0}}" }
  vars:
    state: stopped
    name: metricbeat
  tags: metricbeat

- hosts: hosts_cerebro
  gather_facts: no
  roles:
    - service
  vars:
    state: stopped
    name: vitam-elasticsearch-cerebro

- hosts: hosts_mongos_data
  roles:
    - { role: docker, when: "inventory_hostname not in single_vm_hostnames" }
  vars:
    name: "mongo-express"
    state: stopped
    group_name: "hosts_mongos_data"

- hosts: hosts_mongos_offer
  roles:
    - { role: docker, when: "inventory_hostname not in single_vm_hostnames" }
  vars:
    name: "mongo-express"
    state: stopped
    group_name: "hosts_mongos_offer"

- hosts: hosts_dev_tools
  roles:
    - { role: docker, when: "inventory_hostname not in single_vm_hostnames" }
  vars:
    name: "elasticsearch-head"
    state: stopped
