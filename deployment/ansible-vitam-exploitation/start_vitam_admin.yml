---

- hosts: hosts_consul_server
  any_errors_fatal: true
  gather_facts: no
  roles:
    - service
  vars:
    state: "{% if 'consul' not in vitam_secondary_site_components and primary_site| lower == 'false' %}stopped{% else %}started{% endif %}"
    name: vitam-consul

- hosts: vitam
  gather_facts: no
  roles:
    - { role: service, when: "{{groups['hosts_elasticsearch_log'] | length > 0}}" }
  vars:
    state: started
    name: metricbeat
  tags: metricbeat

- hosts: vitam
  any_errors_fatal: true
  gather_facts: no
  roles:
    - { role: service, when: consul_disabled is not defined or consul_disabled |lower != 'true' }
  vars:
    state: "{% if 'consul' not in vitam_secondary_site_components and primary_site| lower == 'false' %}stopped{% else %}started{% endif %}"
    name: vitam-consul

# Monitoring
- hosts: hosts_prometheus
  gather_facts: no
  roles:
    - service
  vars:
    state: started
    name: vitam-prometheus

- hosts: vitam
  gather_facts: no
  roles:
    - { role: service, when: "( prometheus.node_exporter.enabled == true )" }
  vars:
    state: started
    name: vitam-node-exporter

- hosts: hosts_alertmanager
  gather_facts: no
  roles:
    - service
  vars:
    state: started
    name: vitam-alertmanager

- hosts: hosts_grafana
  gather_facts: no
  roles:
    - service
  vars:
    state: started
    name: grafana-server

# log-central start
- hosts: hosts_cerebro
  gather_facts: no
  roles:
    - service
  vars:
    state: started
    name: vitam-elasticsearch-cerebro

- hosts: hosts_elasticsearch_log
  any_errors_fatal: true
  gather_facts: no
  roles:
    - service
  vars:
    state: "{% if 'elasticsearch-log' not in vitam_secondary_site_components and primary_site| lower == 'false' %}stopped{% else %}started{% endif %}"
    name: vitam-elasticsearch-log
    hote: "{{ ip_admin }}"
    port_check: "{{ elasticsearch.log.port_http }}"
    timeout: "{{ vitam_defaults.services.start_timeout }}"

- hosts: hosts_logstash
  any_errors_fatal: true
  gather_facts: no
  roles:
    - service
  vars:
    state: "{% if 'logstash' not in vitam_secondary_site_components and primary_site| lower == 'false' %}stopped{% else %}started{% endif %}"
    name: logstash
    hote: "{{ ip_admin }}"
    port_check: "{{ logstash.port }}"
    timeout: "{{ vitam_defaults.services.start_timeout }}"

- hosts: hosts_kibana_log
  any_errors_fatal: true
  gather_facts: no
  roles:
    - service
  vars:
    state: "{% if 'kibana' not in vitam_secondary_site_components and primary_site| lower == 'false' %}stopped{% else %}started{% endif %}"
    name: kibana
    hote: "{{ ip_admin }}"
    port_check: "{{ kibana.log.port }}"
    timeout: "{{ vitam_defaults.services.start_timeout }}"

- hosts: hosts_mongos_data
  roles:
    - { role: docker, when: "inventory_hostname not in single_vm_hostnames" }
  vars:
    name: "mongo-express"
    state: started
    group_name: "hosts_mongos_data"

- hosts: hosts_mongos_offer
  roles:
    - { role: docker, when: "inventory_hostname not in single_vm_hostnames" }
  vars:
    name: "mongo-express"
    state: started
    group_name: "hosts_mongos_offer"

- hosts: hosts_dev_tools
  roles:
    - { role: docker, when: "inventory_hostname not in single_vm_hostnames" }
  vars:
    name: "elasticsearch-head"
    state: started
